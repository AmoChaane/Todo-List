(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([n.id,'* {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    box-sizing: border-box;\r\n    font-family: \'Poppins\', sans-serif;\r\n    color: rgb(51,50,50);\r\n}\r\n\r\n\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #E75A7C;\r\n    border-radius: 5px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px #b8b8b8; \r\n    border-radius: 10px;\r\n}\r\n\r\n#content {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.header {\r\n    background-color: #E75A7C;\r\n    width: 100%;\r\n    height: 48px;\r\n    box-shadow: 0px 1px 3px #ffffff;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 5;\r\n}\r\n\r\n.nav-links {\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n}\r\n\r\n.nav-links .logo {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 2 / 3;\r\n} \r\n\r\n.nav-links .logo h1 {\r\n    color: white;\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 3 / 4;\r\n}\r\n\r\nnav .plus {\r\n    font-size: 1.2em;\r\n    margin-right: 25px;\r\n    cursor: pointer;\r\n    transition: all .5s;\r\n    border: none;\r\n    color: #E75A7C;\r\n    border-radius: 13px;\r\n    outline: none;\r\n    padding: 0 10px;\r\n\r\n}\r\n\r\nnav .plus:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\nhr {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.main {\r\n    margin-top: 48px;\r\n    margin-left: 23vw;\r\n    /* position: absolute;\r\n    left: 23vw;\r\n    right: 0;\r\n    top: 48px; */\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n\r\n.signin {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.02em;\r\n    color: #25291C;\r\n}\r\n\r\n.sidebar {\r\n    height: calc(100vh - 48px);\r\n    padding: 2% 3%;\r\n    background-color: #F2F5EA;\r\n    width: 23vw;\r\n    position: fixed;\r\n    top: 48px;\r\n    left: 0;\r\n    overflow-y: auto;\r\n}\r\n\r\n.sidebar .a {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    transition: all .2s\r\n}\r\n\r\n.sidebar .a:hover {\r\n    background-color: white;\r\n}\r\n\r\n.add {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    margin-left: 50px;\r\n}\r\n\r\n.add:hover {\r\n    background: white;\r\n}\r\n\r\n.fa-list-check {\r\n    font-size: .8em;\r\n}\r\n\r\n\r\n.project {\r\n    position: relative;\r\n    display: flex;\r\n    border-radius: 7px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.project i {\r\n    display: none;\r\n    align-items: center;\r\n    margin-bottom: 2px;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n}\r\n\r\n.project i:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\n.project p {\r\n    padding: 5px;\r\n    margin-left: 25px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    font-size: 1.1em;\r\n    width: 70%;\r\n}\r\n\r\n.project:hover {\r\n    background-color: white;\r\n}\r\n\r\n\r\n.project p::before {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    content: "";\r\n    display: flex;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: currentColor;\r\n    border-radius: 50%;\r\n    background-color: #b8b8b8;\r\n}\r\n\r\n\r\n.tasks-section {\r\n    background-color: #ffffff;\r\n    padding: 3%;\r\n}\r\n\r\n.tasks-section h2 {\r\n    color: rgb(51,50,50);\r\n    font-size: 2.1rem;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n/* --------------------------------------------------------------------------------------------------- */\r\n\r\n.overlay {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n    transition: all .5s\r\n}\r\n\r\n.overlay-edit {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n\r\n.overlay2 {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n.overlay3 {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n\r\n\r\n.info-box {\r\n    width: 60%;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n}\r\n\r\n.info-box .heading {\r\n    padding: 10px;\r\n}\r\n\r\n\r\n#form {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n#form2 {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n\r\n.task-info {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: minmax(1fr, 60px) 1fr;\r\n    padding: 10px;\r\n}\r\n\r\nlabel {\r\n    font-size: 1.1em;\r\n}\r\n\r\n.overlay-input, .overlay-select {\r\n    width: 90%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\noption[value="Medium"]:hover {\r\n    background-color: #E75A7C;\r\n}\r\n\r\ninput:focus, select:focus, textarea:focus {\r\n    outline: none;\r\n}\r\n\r\n\r\n.description {\r\n    grid-row: 2 / 4;\r\n}\r\n\r\n.buttons {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    column-gap: 7px;\r\n    grid-column: 1 / 3;\r\n}\r\n\r\n.buttons button {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    transition: all .3s;\r\n    font-size: 1em\r\n}\r\n\r\n.buttons button:hover {\r\n    transform: scale(1.07);\r\n}\r\n\r\n.add-task, .add-project, .edit-btn {\r\n    background-color: #E75A7C;\r\n    color: white;\r\n    border: none;\r\n}\r\n\r\n.close {\r\n    background-color: white;\r\n    color: #25291C;\r\n    border: 1px solid black;\r\n}\r\n\r\ntextarea {\r\n    height: 120px;\r\n    width: 90%;\r\n    padding: 5px;\r\n    resize: none;\r\n}\r\n\r\n\r\n.overlay2-input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\n.tasks {\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: grid;\r\n    grid-auto-rows: 60px;\r\n    row-gap: 20px;\r\n}\r\n\r\n.task {\r\n    width: 75%;\r\n    height: 60px;\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    box-shadow: 1px 1px 3px rgb(190, 190, 190);\r\n    border-left: 14px solid red;\r\n    border-radius: 10px;\r\n    /* margin-top: 30px; */\r\n    /* cursor: pointer; */\r\n    /* transition: all .5s; */\r\n    z-index: 4;\r\n}\r\n\r\n/* .task:hover {\r\n    transform: scale(1.01);\r\n} */\r\n\r\n\r\n\r\n.info {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.radio {\r\n    display: inline-block;\r\n    width: auto;\r\n    height: auto;\r\n}\r\n\r\ninput[type="radio"] {\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    vertical-align: middle;\r\n    margin: 10px;\r\n}\r\n\r\n.title-desc {\r\n    width: 360px;\r\n    height: 56px;\r\n    \r\n}\r\n\r\n.title-desc p, .title-desc h3 {\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.title-desc h3 {\r\n    cursor: pointer;\r\n    transition: all .3s;\r\n}\r\n\r\n.title-desc h3:hover {\r\n    transform: scale(1.02);\r\n}\r\n\r\n\r\n\r\n\r\n.task .icons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.icons span {\r\n    font-weight: 700;\r\n}\r\n\r\n.fa-pencil {\r\n    padding-left: 20px;\r\n}\r\n\r\n.task div .fa-solid {\r\n    font-size: 1.1em;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.task div .fa-solid:hover {\r\n    transform: scale(1.2);\r\n}\r\n\r\n.fa-trash-can {\r\n    padding-left: 25px;\r\n    padding-right: 15px;\r\n}\r\n\r\n\r\n\r\n.h3ForTaskInfo {\r\n    color: #25291C;\r\n}\r\n\r\n\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['* {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    box-sizing: border-box;\r\n    font-family: \'Poppins\', sans-serif;\r\n    color: rgb(51,50,50);\r\n}\r\n\r\n\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #E75A7C;\r\n    border-radius: 5px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px #b8b8b8; \r\n    border-radius: 10px;\r\n}\r\n\r\n#content {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.header {\r\n    background-color: #E75A7C;\r\n    width: 100%;\r\n    height: 48px;\r\n    box-shadow: 0px 1px 3px #ffffff;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 5;\r\n}\r\n\r\n.nav-links {\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n}\r\n\r\n.nav-links .logo {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 2 / 3;\r\n} \r\n\r\n.nav-links .logo h1 {\r\n    color: white;\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 3 / 4;\r\n}\r\n\r\nnav .plus {\r\n    font-size: 1.2em;\r\n    margin-right: 25px;\r\n    cursor: pointer;\r\n    transition: all .5s;\r\n    border: none;\r\n    color: #E75A7C;\r\n    border-radius: 13px;\r\n    outline: none;\r\n    padding: 0 10px;\r\n\r\n}\r\n\r\nnav .plus:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\nhr {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.main {\r\n    margin-top: 48px;\r\n    margin-left: 23vw;\r\n    /* position: absolute;\r\n    left: 23vw;\r\n    right: 0;\r\n    top: 48px; */\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n\r\n.signin {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.02em;\r\n    color: #25291C;\r\n}\r\n\r\n.sidebar {\r\n    height: calc(100vh - 48px);\r\n    padding: 2% 3%;\r\n    background-color: #F2F5EA;\r\n    width: 23vw;\r\n    position: fixed;\r\n    top: 48px;\r\n    left: 0;\r\n    overflow-y: auto;\r\n}\r\n\r\n.sidebar .a {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    transition: all .2s\r\n}\r\n\r\n.sidebar .a:hover {\r\n    background-color: white;\r\n}\r\n\r\n.add {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    margin-left: 50px;\r\n}\r\n\r\n.add:hover {\r\n    background: white;\r\n}\r\n\r\n.fa-list-check {\r\n    font-size: .8em;\r\n}\r\n\r\n\r\n.project {\r\n    position: relative;\r\n    display: flex;\r\n    border-radius: 7px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.project i {\r\n    display: none;\r\n    align-items: center;\r\n    margin-bottom: 2px;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n}\r\n\r\n.project i:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\n.project p {\r\n    padding: 5px;\r\n    margin-left: 25px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    font-size: 1.1em;\r\n    width: 70%;\r\n}\r\n\r\n.project:hover {\r\n    background-color: white;\r\n}\r\n\r\n\r\n.project p::before {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    content: "";\r\n    display: flex;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: currentColor;\r\n    border-radius: 50%;\r\n    background-color: #b8b8b8;\r\n}\r\n\r\n\r\n.tasks-section {\r\n    background-color: #ffffff;\r\n    padding: 3%;\r\n}\r\n\r\n.tasks-section h2 {\r\n    color: rgb(51,50,50);\r\n    font-size: 2.1rem;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n/* --------------------------------------------------------------------------------------------------- */\r\n\r\n.overlay {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n    transition: all .5s\r\n}\r\n\r\n.overlay-edit {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n\r\n.overlay2 {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n.overlay3 {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n\r\n\r\n.info-box {\r\n    width: 60%;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n}\r\n\r\n.info-box .heading {\r\n    padding: 10px;\r\n}\r\n\r\n\r\n#form {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n#form2 {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n\r\n.task-info {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: minmax(1fr, 60px) 1fr;\r\n    padding: 10px;\r\n}\r\n\r\nlabel {\r\n    font-size: 1.1em;\r\n}\r\n\r\n.overlay-input, .overlay-select {\r\n    width: 90%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\noption[value="Medium"]:hover {\r\n    background-color: #E75A7C;\r\n}\r\n\r\ninput:focus, select:focus, textarea:focus {\r\n    outline: none;\r\n}\r\n\r\n\r\n.description {\r\n    grid-row: 2 / 4;\r\n}\r\n\r\n.buttons {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    column-gap: 7px;\r\n    grid-column: 1 / 3;\r\n}\r\n\r\n.buttons button {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    transition: all .3s;\r\n    font-size: 1em\r\n}\r\n\r\n.buttons button:hover {\r\n    transform: scale(1.07);\r\n}\r\n\r\n.add-task, .add-project, .edit-btn {\r\n    background-color: #E75A7C;\r\n    color: white;\r\n    border: none;\r\n}\r\n\r\n.close {\r\n    background-color: white;\r\n    color: #25291C;\r\n    border: 1px solid black;\r\n}\r\n\r\ntextarea {\r\n    height: 120px;\r\n    width: 90%;\r\n    padding: 5px;\r\n    resize: none;\r\n}\r\n\r\n\r\n.overlay2-input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\n.tasks {\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: grid;\r\n    grid-auto-rows: 60px;\r\n    row-gap: 20px;\r\n}\r\n\r\n.task {\r\n    width: 75%;\r\n    height: 60px;\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    box-shadow: 1px 1px 3px rgb(190, 190, 190);\r\n    border-left: 14px solid red;\r\n    border-radius: 10px;\r\n    /* margin-top: 30px; */\r\n    /* cursor: pointer; */\r\n    /* transition: all .5s; */\r\n    z-index: 4;\r\n}\r\n\r\n/* .task:hover {\r\n    transform: scale(1.01);\r\n} */\r\n\r\n\r\n\r\n.info {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.radio {\r\n    display: inline-block;\r\n    width: auto;\r\n    height: auto;\r\n}\r\n\r\ninput[type="radio"] {\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    vertical-align: middle;\r\n    margin: 10px;\r\n}\r\n\r\n.title-desc {\r\n    width: 360px;\r\n    height: 56px;\r\n    \r\n}\r\n\r\n.title-desc p, .title-desc h3 {\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.title-desc h3 {\r\n    cursor: pointer;\r\n    transition: all .3s;\r\n}\r\n\r\n.title-desc h3:hover {\r\n    transform: scale(1.02);\r\n}\r\n\r\n\r\n\r\n\r\n.task .icons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.icons span {\r\n    font-weight: 700;\r\n}\r\n\r\n.fa-pencil {\r\n    padding-left: 20px;\r\n}\r\n\r\n.task div .fa-solid {\r\n    font-size: 1.1em;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.task div .fa-solid:hover {\r\n    transform: scale(1.2);\r\n}\r\n\r\n.fa-trash-can {\r\n    padding-left: 25px;\r\n    padding-right: 15px;\r\n}\r\n\r\n\r\n\r\n.h3ForTaskInfo {\r\n    color: #25291C;\r\n}\r\n\r\n\r\n'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);t&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),r.push(c))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=t.base?s[0]+t.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var m=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var s=t(n,o),d=0;d<a.length;d++){var c=e(a[d]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}a=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{function n(n,r){if(r.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+r.length+" present")}function r(n){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}function t(e){n(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===r(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function o(r){n(1,arguments);var e=t(r);return e.setHours(0,0,0,0),e}function a(r,e){n(2,arguments);var t=o(r),a=o(e);return t.getTime()===a.getTime()}function i(r){return n(1,arguments),a(r,Date.now())}Math.pow(10,8);var A=36e5;function s(n){if(null===n||!0===n||!1===n)return NaN;var r=Number(n);return isNaN(r)?r:r<0?Math.ceil(r):Math.floor(r)}function d(r,e){var t;n(1,arguments);var o=s(null!==(t=null==e?void 0:e.additionalDigits)&&void 0!==t?t:2);if(2!==o&&1!==o&&0!==o)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof r&&"[object String]"!==Object.prototype.toString.call(r))return new Date(NaN);var a,i=m(r);if(i.date){var A=C(i.date,o);a=f(A.restDateString,A.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var d,c=a.getTime(),l=0;if(i.time&&(l=g(i.time),isNaN(l)))return new Date(NaN);if(!i.timezone){var p=new Date(c+l),u=new Date(0);return u.setFullYear(p.getUTCFullYear(),p.getUTCMonth(),p.getUTCDate()),u.setHours(p.getUTCHours(),p.getUTCMinutes(),p.getUTCSeconds(),p.getUTCMilliseconds()),u}return d=x(i.timezone),isNaN(d)?new Date(NaN):new Date(c+l+d)}var c={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},l=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,p=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,u=/^([+-])(\d{2})(?::?(\d{2}))?$/;function m(n){var r,e={},t=n.split(c.dateTimeDelimiter);if(t.length>2)return e;if(/:/.test(t[0])?r=t[0]:(e.date=t[0],r=t[1],c.timeZoneDelimiter.test(e.date)&&(e.date=n.split(c.timeZoneDelimiter)[0],r=n.substr(e.date.length,n.length))),r){var o=c.timezone.exec(r);o?(e.time=r.replace(o[1],""),e.timezone=o[1]):e.time=r}return e}function C(n,r){var e=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+r)+"})|(\\d{2}|[+-]\\d{"+(2+r)+"})$)"),t=n.match(e);if(!t)return{year:NaN,restDateString:""};var o=t[1]?parseInt(t[1]):null,a=t[2]?parseInt(t[2]):null;return{year:null===a?o:100*a,restDateString:n.slice((t[1]||t[2]).length)}}function f(n,r){if(null===r)return new Date(NaN);var e=n.match(l);if(!e)return new Date(NaN);var t=!!e[4],o=B(e[1]),a=B(e[2])-1,i=B(e[3]),A=B(e[4]),s=B(e[5])-1;if(t)return function(n,r,e){return r>=1&&r<=53&&e>=0&&e<=6}(0,A,s)?function(n,r,e){var t=new Date(0);t.setUTCFullYear(n,0,4);var o=7*(r-1)+e+1-(t.getUTCDay()||7);return t.setUTCDate(t.getUTCDate()+o),t}(r,A,s):new Date(NaN);var d=new Date(0);return function(n,r,e){return r>=0&&r<=11&&e>=1&&e<=(h[r]||(v(n)?29:28))}(r,a,i)&&function(n,r){return r>=1&&r<=(v(n)?366:365)}(r,o)?(d.setUTCFullYear(r,a,Math.max(o,i)),d):new Date(NaN)}function B(n){return n?parseInt(n):1}function g(n){var r=n.match(p);if(!r)return NaN;var e=I(r[1]),t=I(r[2]),o=I(r[3]);return function(n,r,e){return 24===n?0===r&&0===e:e>=0&&e<60&&r>=0&&r<60&&n>=0&&n<25}(e,t,o)?e*A+6e4*t+1e3*o:NaN}function I(n){return n&&parseFloat(n.replace(",","."))||0}function x(n){if("Z"===n)return 0;var r=n.match(u);if(!r)return 0;var e="+"===r[1]?-1:1,t=parseInt(r[2]),o=r[3]&&parseInt(r[3])||0;return function(n,r){return r>=0&&r<=59}(0,o)?e*(t*A+6e4*o):NaN}var h=[31,null,31,30,31,30,31,31,30,31,30,31];function v(n){return n%400==0||n%4==0&&n%100!=0}function y(r,e){n(2,arguments);var o=t(r),a=s(e);return isNaN(a)?new Date(NaN):a?(o.setDate(o.getDate()+a),o):o}function b(r){return n(1,arguments),a(r,y(Date.now(),1))}var k={};function E(){return k}function w(r,e){var o,a,i,A,d,c,l,p;n(1,arguments);var u=E(),m=s(null!==(o=null!==(a=null!==(i=null!==(A=null==e?void 0:e.weekStartsOn)&&void 0!==A?A:null==e||null===(d=e.locale)||void 0===d||null===(c=d.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==i?i:u.weekStartsOn)&&void 0!==a?a:null===(l=u.locale)||void 0===l||null===(p=l.options)||void 0===p?void 0:p.weekStartsOn)&&void 0!==o?o:0);if(!(m>=0&&m<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var C=t(r),f=C.getDay(),B=(f<m?7:0)+f-m;return C.setDate(C.getDate()-B),C.setHours(0,0,0,0),C}function j(r,e,t){n(2,arguments);var o=w(r,t),a=w(e,t);return o.getTime()===a.getTime()}function L(r,e){return n(1,arguments),j(r,Date.now(),e)}var _=e(379),T=e.n(_),S=e(795),N=e.n(S),Y=e(569),z=e.n(Y),D=e(565),M=e.n(D),q=e(216),U=e.n(q),W=e(589),Z=e.n(W),O=e(426),F={};F.styleTagTransform=Z(),F.setAttributes=M(),F.insert=z().bind(null,"head"),F.domAPI=N(),F.insertStyleElement=U(),T()(O.Z,F),O.Z&&O.Z.locals&&O.Z.locals;const H=document.body.scrollHeight;function P(){const n=document.querySelector("#content"),r=document.querySelector(".overlay"),e=document.querySelector(".overlay2"),t=document.querySelector(".add-task"),o=document.querySelector("#close-task-form"),a=document.querySelector("#close-project-form"),i=document.querySelector(".plus"),A=document.querySelector(".today"),s=document.querySelector(".tomorrow"),d=document.querySelector(".this-week"),c=document.querySelector(".completed-tasks"),l=document.querySelector(".add-project"),p=document.querySelector(".add"),u=document.querySelector("#task-input-text"),m=document.querySelector("#task-input-date"),C=document.querySelector("#task-input-textarea"),f=document.querySelector("#task-input-priority"),B=document.querySelector("#task-input-project"),g=document.querySelector("#project-input-text"),I=document.querySelector("#tasks-section-h2"),x=document.querySelector(".tasks-section"),h=document.querySelector(".projects"),v=document.querySelector(".all-tasks");return{content:n,todays_date:new Date,all_tasks:v,projects:h,tasks_section:x,project_input_text:g,task_input_project:B,task_input_priority:f,task_input_priority:f,task_input_textarea:C,task_input_date:m,task_input_text:u,add_project_btn:p,submit_project:l,completed_tasks:c,this_week:d,tomorrow:s,today:A,plus:i,close_project:a,close_task:o,add_task:t,overlay2:e,overlay:r,h2:I}}document.body.style.height=`${H}px`;const G=[],X=[],$=[],R=[];function V(n,r,e,t,o){this.title=n,this.desc=e,this.due=r,this.priority=t,this.project=o}function J(n){const r=document.createElement("div");r.classList.add("task"),"Low"==n.priority?r.style.borderLeft="14px solid blue":"Medium"==n.priority?r.style.borderLeft="14px solid orange":r.style.borderLeft="14px solid red";const e=document.createElement("div");e.classList.add("info");const t=document.createElement("div");t.classList.add("radio");const o=document.createElement("input");o.type="radio",t.append(o),e.append(t);const a=document.createElement("div");a.classList.add("title-desc");const i=document.createElement("h3");i.classList.add("h3"),i.textContent=n.title;const A=document.createElement("p");A.classList.add("p"),A.textContent=n.desc,a.append(i,A),e.append(a);const s=document.createElement("div");s.classList.add("icons");const d=document.createElement("div");d.classList.add("date"),d.textContent=n.due,s.append(d);const c=document.createElement("i");c.classList.add("fa-solid","fa-pencil");const l=document.createElement("i");return l.classList.add("fa-solid","fa-trash-can"),s.append(c,l),r.append(e,s),o.addEventListener("click",(e=>{setTimeout((()=>{r.remove()}),150),G.splice(G.indexOf(n),1),X.push(n),R.splice(R.indexOf(n.title),1)})),i.addEventListener("click",(r=>{X.includes(n)?P().content.append(rn(n,i,A,d,"none").overlay3):P().content.append(rn(n,i,A,d,"flex").overlay3)})),l.addEventListener("click",(e=>{r.remove(),G.splice(G.indexOf(n),1),X.splice(X.indexOf(n),1),R.splice(R.indexOf(n.title),1)})),c.addEventListener("click",(r=>{P().content.append(nn(n,i,A,d).overlay_edit)})),X.includes(n)&&(c.style.display="none",o.style.display="none",a.style.paddingLeft="15px"),r}function K(n,r){document.querySelector(".tasks").remove();const e=document.createElement("div");e.classList.add("tasks"),P().tasks_section.append(e);for(let t=0;t<n.length;t++)(i(d(n[t].due))&&" Today"==r||b(d(n[t].due))&&" Tomorrow"==r||L(d(n[t].due))&&" This Week"==r||" Completed Tasks"==r||" All Tasks"==r)&&e.append(J(n[t]))}function Q(){document.querySelectorAll(".project p").forEach((n=>{n.addEventListener("click",(r=>{P().h2.textContent=n.innerText,P().today.style.backgroundColor="",P().tomorrow.style.backgroundColor="",P().this_week.style.backgroundColor="",P().completed_tasks.style.backgroundColor="",document.querySelector(".tasks").remove();const e=document.createElement("div");e.classList.add("tasks"),P().tasks_section.append(e);for(let n=0;n<G.length;n++)if(G[n].project==r.target.textContent){const r=J(G[n]);e.append(r)}}))}))}function nn(n,r,e,t){const o=document.createElement("div");o.classList.add("overlay-edit");const a=document.createElement("div");a.classList.add("info-box"),o.append(a);const i=document.createElement("div");i.classList.add("heading");const A=document.createElement("h2");A.textContent="Edit Task",i.append(A),a.append(i);const s=document.createElement("hr");a.append(s);const d=document.createElement("form");d.id="form",a.append(d);const c=document.createElement("div");c.classList.add("title");const l=document.createElement("label");l.textContent="Title:";const p=document.createElement("br"),u=document.createElement("input");u.classList.add("overlay-input"),u.type="text",u.id="task-input-text4",c.append(l,p,u),d.append(c);const m=document.createElement("div");m.classList.add("due-date");const C=document.createElement("label");C.textContent="Due Date:";const f=document.createElement("br"),B=document.createElement("input");B.classList.add("overlay-input"),B.type="date",B.id="task-input-date4",m.append(C,f,B),d.append(m);const g=document.createElement("div");g.classList.add("description");const I=document.createElement("label");I.textContent="Description:";const x=document.createElement("br"),h=document.createElement("textarea");h.id="task-input-textarea4",g.append(I,x,h),d.append(g);const v=document.createElement("div");v.classList.add("priority");const y=document.createElement("label");y.textContent="Priority:";const b=document.createElement("br"),k=document.createElement("select");k.classList.add("overlay-select"),k.id="task-input-priority4",k.innerHTML='<option value="Low" selected>Low</option>\n    <option value="Medium" selected>Medium</option>\n    <option value="High" selected>High</option>',v.append(y,b,k),d.append(v);const E=document.createElement("div");E.classList.add("select-project");const w=document.createElement("label");w.textContent="Project:";const j=document.createElement("br"),L=document.createElement("select");L.classList.add("overlay-select"),L.id="task-input-project4",L.innerHTML+='<option value="" selected>N/A</option>';for(let n=0;n<$.length;n++)L.innerHTML+=`<option value="${$[n]}">${$[n]}</option>`;E.append(w,j,L),d.append(E);const _=document.createElement("div");_.classList.add("buttons");const T=document.createElement("button");T.id="close-edit-form",T.classList.add("close"),T.textContent="Close";const S=document.createElement("button");return S.id="finish-edit",S.classList.add("add-task"),S.textContent="Finish Edit",_.append(T,S),a.append(_),T.addEventListener("click",(n=>{o.remove()})),S.addEventListener("click",(a=>{n.title=u.value,n.desc=h.value,n.due=B.value,n.project=L.value,n.priority=k.value,r.textContent=n.title,e.textContent=n.desc,t.textContent=n.due,K(G,document.querySelector("#tasks-section-h2").textContent),o.remove(),console.log(G);for(let n=0;n<G.length;n++)G[n].project==document.querySelector("#tasks-section-h2").textContent&&document.querySelector(".tasks").append(J(G[n]))})),u.value=n.title,B.value=n.due,h.value=n.desc,k.value=n.priority,L.value=n.project,{overlay_edit:o,input:u,input2:B,textarea:h,select:k,select2:L,btn1:T,btn2:S}}function rn(n,r,e,t,o){const a=document.createElement("div");a.classList.add("overlay3");const i=document.createElement("div");i.classList.add("info-box"),a.append(i);const A=document.createElement("div");A.classList.add("heading"),A.style.textAlign="center";const s=document.createElement("h2");s.classList.add("overlay3-title"),s.textContent=n.title,A.append(s),i.append(A);const d=document.createElement("hr");i.append(d);const c=document.createElement("div");c.classList.add("task-info"),i.append(c);const l=document.createElement("div");l.classList.add("due-date"),l.style.paddingBottom="10px";const p=document.createElement("h3");p.classList.add("h3ForTaskInfo"),p.textContent="Due Date:";const u=document.createElement("p");u.classList.add("overlay3-date"),u.textContent=n.due,l.append(p,u),c.append(l);const m=document.createElement("div");m.classList.add("description");const C=document.createElement("h3");C.classList.add("h3ForTaskInfo"),C.textContent="Description:";const f=document.createElement("p");f.classList.add("overlay3-desc"),f.textContent=n.desc,m.append(C,f),c.append(m);const B=document.createElement("div");B.classList.add("priority"),B.style.paddingBottom="10px";const g=document.createElement("h3");g.classList.add("h3ForTaskInfo"),g.textContent="Priority:";const I=document.createElement("p");I.classList.add("overlay3-priority"),I.textContent=n.priority,B.append(g,I),c.append(B);const x=document.createElement("div");x.classList.add("select-project");const h=document.createElement("h3");h.classList.add("h3ForTaskInfo"),h.textContent="Project:";const v=document.createElement("p");v.classList.add("overlay3-project"),console.log(n.project),""==n.project?v.textContent="N/A":v.textContent=n.project,x.append(h,v),c.append(x);const y=document.createElement("div");y.classList.add("buttons");const b=document.createElement("button");b.id="close-edit-task-form",b.classList.add("close"),b.textContent="Close";const k=document.createElement("button");return k.classList.add("edit-btn"),k.textContent="Edit Task",k.style.display=o,y.append(b,k),i.append(y),b.addEventListener("click",(n=>{a.remove()})),k.addEventListener("click",(o=>{a.remove(),P().content.append(nn(n,r,e,t).overlay_edit)})),{overlay3:a,btn1:b,btn2:k}}function en(n,r,e,t,o){P().h2.textContent=n.textContent,n.style.backgroundColor="white",r.style.backgroundColor="",e.style.backgroundColor="",t.style.backgroundColor="",o.style.backgroundColor=""}P().add_task.addEventListener("click",(r=>{if(R.includes(P().task_input_text.value))alert("The task name is already in use");else if(!function(r,e){n(2,arguments);var o=t(r),a=t(e);return o.getTime()<a.getTime()}(d(P().task_input_date.value),P().todays_date)||i(d(P().task_input_date.value)))if(""==P().task_input_text.value||""==P().task_input_date.value||""==P().task_input_textarea.value)alert("Please complete all fields");else{const n=new V(P().task_input_text.value,P().task_input_date.value,P().task_input_textarea.value,P().task_input_priority.value,P().task_input_project.value);G.push(n),console.log(G),R.push(n.title),P().overlay.style.display="none";const r=document.querySelector(".tasks"),e=J(n);(n.project==P().h2.textContent||i(d(n.due))&&" Today"==P().h2.textContent||b(d(n.due))&&" Tomorrow"==P().h2.textContent||L(d(n.due))&&" This Week"==P().h2.textContent)&&r.append(e)}else alert("The date you have chosen has already passed")})),window.addEventListener("DOMContentLoaded",(n=>{P().today.click(),P().h2.textContent=P().today.textContent,P().task_input_project.innerHTML+='<option value="Inbox" selected>N/A</option>',Q(),K(G,n.target.textContent)})),P().all_tasks.addEventListener("click",(n=>{K(G,n.target.textContent),en(n.target,P().today,P().tomorrow,P().this_week,P().completed_tasks)})),P().today.addEventListener("click",(n=>{en(n.target,P().all_tasks,P().tomorrow,P().this_week,P().completed_tasks),K(G,n.target.textContent)})),P().tomorrow.addEventListener("click",(n=>{K(G,n.target.textContent),en(n.target,P().all_tasks,P().today,P().this_week,P().completed_tasks)})),P().this_week.addEventListener("click",(n=>{K(G,n.target.textContent),en(n.target,P().all_tasks,P().today,P().tomorrow,P().completed_tasks)})),P().completed_tasks.addEventListener("click",(n=>{K(X,n.target.textContent),en(n.target,P().today,P().tomorrow,P().this_week,P().all_tasks)})),P().plus.addEventListener("click",(n=>{P().task_input_project.innerHTML='<option value="" selected>N/A</option>';for(let n=0;n<$.length;n++)P().task_input_project.innerHTML+=`<option value="${$[n]}">${$[n]}</option>`;P().overlay.style.display="flex"})),P().add_project_btn.addEventListener("click",(n=>{P().overlay2.style.display="flex"})),P().submit_project.addEventListener("click",(n=>{if($.includes(P().project_input_text.value))alert("Project already exists");else{P().projects.append(function(n){const r=document.createElement("div");r.classList.add("project");const e=document.createElement("p");e.textContent=n;const t=document.createElement("i");return t.classList.add("fa-solid","fa-trash-can"),r.append(e,t),r.addEventListener("mouseover",(n=>{t.style.display="flex"})),r.addEventListener("mouseout",(n=>{t.style.display="none"})),t.addEventListener("click",(n=>{P().h2.textContent="",console.log("Projects Created",$),console.log("Tasks Created",G),r.remove(),$.splice($.indexOf(e.textContent),1);for(let n=0;n<G.length;n++)for(let r in G[n])G[n][r]==e.textContent&&(G.splice(G.indexOf(G[n]),1),R.splice(R.indexOf(G[n].title),1));console.log("Projects Created",$),console.log("Tasks Created",G)})),r}(P().project_input_text.value)),$.push(P().project_input_text.value),P().overlay2.style.display="none";for(let n=$.indexOf($[$.length-1]);n<$.length;n++)P().task_input_project.innerHTML+=`<option value="${$[n]}">${$[n]}</option>`;Q()}})),P().close_task.addEventListener("click",(n=>{P().overlay.style.display="none"})),P().close_project.addEventListener("click",(n=>{P().overlay2.style.display="none"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,