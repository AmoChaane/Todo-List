(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([n.id,'* {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    box-sizing: border-box;\r\n    font-family: \'Poppins\', sans-serif;\r\n    color: rgb(51,50,50);\r\n}\r\n\r\n\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #E75A7C;\r\n    border-radius: 5px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px #b8b8b8; \r\n    border-radius: 10px;\r\n}\r\n\r\n#content {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.header {\r\n    background-color: #E75A7C;\r\n    width: 100%;\r\n    height: 48px;\r\n    box-shadow: 0px 1px 3px #ffffff;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 5;\r\n}\r\n\r\n.nav-links {\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n}\r\n\r\n.nav-links .logo {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 2 / 3;\r\n} \r\n\r\n.nav-links .logo h1 {\r\n    color: white;\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 3 / 4;\r\n}\r\n\r\nnav .plus {\r\n    font-size: 1.2em;\r\n    margin-right: 25px;\r\n    cursor: pointer;\r\n    transition: all .5s;\r\n    border: none;\r\n    color: #E75A7C;\r\n    border-radius: 13px;\r\n    outline: none;\r\n    padding: 0 10px;\r\n\r\n}\r\n\r\nnav .plus:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\nhr {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.main {\r\n    margin-top: 48px;\r\n    margin-left: 23vw;\r\n    /* position: absolute;\r\n    left: 23vw;\r\n    right: 0;\r\n    top: 48px; */\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n\r\n.signin {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.02em;\r\n    color: #25291C;\r\n}\r\n\r\n.sidebar {\r\n    height: calc(100vh - 48px);\r\n    padding: 2% 3%;\r\n    background-color: #F2F5EA;\r\n    width: 23vw;\r\n    position: fixed;\r\n    top: 48px;\r\n    left: 0;\r\n    overflow-y: auto;\r\n}\r\n\r\n.sidebar .a {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    transition: all .2s\r\n}\r\n\r\n.sidebar .a:hover {\r\n    background-color: white;\r\n}\r\n\r\n.add {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    margin-left: 50px;\r\n}\r\n\r\n.add:hover {\r\n    background: white;\r\n}\r\n\r\n.fa-list-check {\r\n    font-size: .8em;\r\n}\r\n\r\n\r\n.project {\r\n    position: relative;\r\n    display: flex;\r\n    border-radius: 7px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.project i {\r\n    display: none;\r\n    align-items: center;\r\n    margin-bottom: 2px;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n}\r\n\r\n.project i:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\n.project p {\r\n    padding: 5px;\r\n    margin-left: 25px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    font-size: 1.1em;\r\n    width: 70%;\r\n}\r\n\r\n.project:hover {\r\n    background-color: white;\r\n}\r\n\r\n\r\n.project p::before {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    content: "";\r\n    display: flex;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: currentColor;\r\n    border-radius: 50%;\r\n    background-color: #b8b8b8;\r\n}\r\n\r\n\r\n.tasks-section {\r\n    background-color: #ffffff;\r\n    padding: 3%;\r\n}\r\n\r\n.tasks-section h2 {\r\n    color: rgb(51,50,50);\r\n    font-size: 2.1rem;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n/* --------------------------------------------------------------------------------------------------- */\r\n\r\n.overlay {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n    transition: all .5s\r\n}\r\n\r\n.overlay-edit {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n\r\n.overlay2 {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n.overlay3 {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n.overlay3-desc {\r\n    overflow-wrap: break-word;\r\n}\r\n\r\n\r\n\r\n.info-box {\r\n    width: 60%;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n}\r\n\r\n.info-box .heading {\r\n    padding: 10px;\r\n}\r\n\r\n\r\n#form {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n#form2 {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n\r\n.task-info {\r\n    display: grid;\r\n    grid-template-columns: 50% 50%;\r\n    grid-template-rows: minmax(1fr, 60px) 1fr;\r\n    padding: 10px;\r\n}\r\n\r\nlabel {\r\n    font-size: 1.1em;\r\n}\r\n\r\n.overlay-input, .overlay-select {\r\n    width: 90%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\noption[value="Medium"]:hover {\r\n    background-color: #E75A7C;\r\n}\r\n\r\ninput:focus, select:focus, textarea:focus {\r\n    outline: none;\r\n}\r\n\r\n\r\n.description {\r\n    grid-row: 2 / 4;\r\n}\r\n\r\n.buttons {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    column-gap: 7px;\r\n    grid-column: 1 / 3;\r\n}\r\n\r\n.buttons button {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    transition: all .3s;\r\n    font-size: 1em\r\n}\r\n\r\n.buttons button:hover {\r\n    transform: scale(1.07);\r\n}\r\n\r\n.add-task, .add-project, .edit-btn {\r\n    background-color: #E75A7C;\r\n    color: white;\r\n    border: none;\r\n}\r\n\r\n.close {\r\n    background-color: white;\r\n    color: #25291C;\r\n    border: 1px solid black;\r\n}\r\n\r\ntextarea {\r\n    height: 120px;\r\n    width: 90%;\r\n    padding: 5px;\r\n    resize: none;\r\n}\r\n\r\n\r\n.overlay2-input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\n.tasks {\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: grid;\r\n    grid-auto-rows: 60px;\r\n    row-gap: 20px;\r\n}\r\n\r\n.task {\r\n    width: 75%;\r\n    height: 60px;\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    box-shadow: 1px 1px 3px rgb(190, 190, 190);\r\n    border-left: 14px solid red;\r\n    border-radius: 10px;\r\n    /* margin-top: 30px; */\r\n    /* cursor: pointer; */\r\n    /* transition: all .5s; */\r\n    z-index: 4;\r\n}\r\n\r\n/* .task:hover {\r\n    transform: scale(1.01);\r\n} */\r\n\r\n\r\n\r\n.info {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.radio {\r\n    display: inline-block;\r\n    width: auto;\r\n    height: auto;\r\n}\r\n\r\ninput[type="radio"] {\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    vertical-align: middle;\r\n    margin: 10px;\r\n}\r\n\r\n.title-desc {\r\n    width: 360px;\r\n    height: 56px;\r\n    \r\n}\r\n\r\n.title-desc p, .title-desc h3 {\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.title-desc h3 {\r\n    cursor: pointer;\r\n    transition: all .3s;\r\n}\r\n\r\n.title-desc h3:hover {\r\n    transform: scale(1.02);\r\n}\r\n\r\n\r\n\r\n\r\n.task .icons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.icons span {\r\n    font-weight: 700;\r\n}\r\n\r\n.fa-pencil {\r\n    padding-left: 20px;\r\n}\r\n\r\n.task div .fa-solid {\r\n    font-size: 1.1em;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.task div .fa-solid:hover {\r\n    transform: scale(1.2);\r\n}\r\n\r\n.fa-trash-can {\r\n    padding-left: 25px;\r\n    padding-right: 15px;\r\n}\r\n\r\n\r\n\r\n.h3ForTaskInfo {\r\n    color: #25291C;\r\n}\r\n\r\n\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['* {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    box-sizing: border-box;\r\n    font-family: \'Poppins\', sans-serif;\r\n    color: rgb(51,50,50);\r\n}\r\n\r\n\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #E75A7C;\r\n    border-radius: 5px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px #b8b8b8; \r\n    border-radius: 10px;\r\n}\r\n\r\n#content {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.header {\r\n    background-color: #E75A7C;\r\n    width: 100%;\r\n    height: 48px;\r\n    box-shadow: 0px 1px 3px #ffffff;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 5;\r\n}\r\n\r\n.nav-links {\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n}\r\n\r\n.nav-links .logo {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 2 / 3;\r\n} \r\n\r\n.nav-links .logo h1 {\r\n    color: white;\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-column: 3 / 4;\r\n}\r\n\r\nnav .plus {\r\n    font-size: 1.2em;\r\n    margin-right: 25px;\r\n    cursor: pointer;\r\n    transition: all .5s;\r\n    border: none;\r\n    color: #E75A7C;\r\n    border-radius: 13px;\r\n    outline: none;\r\n    padding: 0 10px;\r\n\r\n}\r\n\r\nnav .plus:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\nhr {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.main {\r\n    margin-top: 48px;\r\n    margin-left: 23vw;\r\n    /* position: absolute;\r\n    left: 23vw;\r\n    right: 0;\r\n    top: 48px; */\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n}\r\n\r\n.signin {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.02em;\r\n    color: #25291C;\r\n}\r\n\r\n.sidebar {\r\n    height: calc(100vh - 48px);\r\n    padding: 2% 3%;\r\n    background-color: #F2F5EA;\r\n    width: 23vw;\r\n    position: fixed;\r\n    top: 48px;\r\n    left: 0;\r\n    overflow-y: auto;\r\n}\r\n\r\n.sidebar .a {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    transition: all .2s\r\n}\r\n\r\n.sidebar .a:hover {\r\n    background-color: white;\r\n}\r\n\r\n.add {\r\n    margin-bottom: 15px;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    padding: 5px;\r\n    margin-left: 50px;\r\n}\r\n\r\n.add:hover {\r\n    background: white;\r\n}\r\n\r\n.fa-list-check {\r\n    font-size: .8em;\r\n}\r\n\r\n\r\n.project {\r\n    position: relative;\r\n    display: flex;\r\n    border-radius: 7px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.project i {\r\n    display: none;\r\n    align-items: center;\r\n    margin-bottom: 2px;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n}\r\n\r\n.project i:hover {\r\n    transform: scale(1.1);\r\n}\r\n\r\n.project p {\r\n    padding: 5px;\r\n    margin-left: 25px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    font-size: 1.1em;\r\n    width: 70%;\r\n}\r\n\r\n.project:hover {\r\n    background-color: white;\r\n}\r\n\r\n\r\n.project p::before {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    content: "";\r\n    display: flex;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: currentColor;\r\n    border-radius: 50%;\r\n    background-color: #b8b8b8;\r\n}\r\n\r\n\r\n.tasks-section {\r\n    background-color: #ffffff;\r\n    padding: 3%;\r\n}\r\n\r\n.tasks-section h2 {\r\n    color: rgb(51,50,50);\r\n    font-size: 2.1rem;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n/* --------------------------------------------------------------------------------------------------- */\r\n\r\n.overlay {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n    transition: all .5s\r\n}\r\n\r\n.overlay-edit {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n\r\n.overlay2 {\r\n    /* display: flex; */\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n.overlay3 {\r\n    display: flex;\r\n    /* display: none; */\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 5;\r\n}\r\n\r\n.overlay3-desc {\r\n    overflow-wrap: break-word;\r\n}\r\n\r\n\r\n\r\n.info-box {\r\n    width: 60%;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n}\r\n\r\n.info-box .heading {\r\n    padding: 10px;\r\n}\r\n\r\n\r\n#form {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n#form2 {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n    padding: 10px;\r\n}\r\n\r\n\r\n.task-info {\r\n    display: grid;\r\n    grid-template-columns: 50% 50%;\r\n    grid-template-rows: minmax(1fr, 60px) 1fr;\r\n    padding: 10px;\r\n}\r\n\r\nlabel {\r\n    font-size: 1.1em;\r\n}\r\n\r\n.overlay-input, .overlay-select {\r\n    width: 90%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\noption[value="Medium"]:hover {\r\n    background-color: #E75A7C;\r\n}\r\n\r\ninput:focus, select:focus, textarea:focus {\r\n    outline: none;\r\n}\r\n\r\n\r\n.description {\r\n    grid-row: 2 / 4;\r\n}\r\n\r\n.buttons {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    column-gap: 7px;\r\n    grid-column: 1 / 3;\r\n}\r\n\r\n.buttons button {\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n    border-radius: 7px;\r\n    transition: all .3s;\r\n    font-size: 1em\r\n}\r\n\r\n.buttons button:hover {\r\n    transform: scale(1.07);\r\n}\r\n\r\n.add-task, .add-project, .edit-btn {\r\n    background-color: #E75A7C;\r\n    color: white;\r\n    border: none;\r\n}\r\n\r\n.close {\r\n    background-color: white;\r\n    color: #25291C;\r\n    border: 1px solid black;\r\n}\r\n\r\ntextarea {\r\n    height: 120px;\r\n    width: 90%;\r\n    padding: 5px;\r\n    resize: none;\r\n}\r\n\r\n\r\n.overlay2-input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n}\r\n\r\n.tasks {\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: grid;\r\n    grid-auto-rows: 60px;\r\n    row-gap: 20px;\r\n}\r\n\r\n.task {\r\n    width: 75%;\r\n    height: 60px;\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    box-shadow: 1px 1px 3px rgb(190, 190, 190);\r\n    border-left: 14px solid red;\r\n    border-radius: 10px;\r\n    /* margin-top: 30px; */\r\n    /* cursor: pointer; */\r\n    /* transition: all .5s; */\r\n    z-index: 4;\r\n}\r\n\r\n/* .task:hover {\r\n    transform: scale(1.01);\r\n} */\r\n\r\n\r\n\r\n.info {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.radio {\r\n    display: inline-block;\r\n    width: auto;\r\n    height: auto;\r\n}\r\n\r\ninput[type="radio"] {\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n    vertical-align: middle;\r\n    margin: 10px;\r\n}\r\n\r\n.title-desc {\r\n    width: 360px;\r\n    height: 56px;\r\n    \r\n}\r\n\r\n.title-desc p, .title-desc h3 {\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.title-desc h3 {\r\n    cursor: pointer;\r\n    transition: all .3s;\r\n}\r\n\r\n.title-desc h3:hover {\r\n    transform: scale(1.02);\r\n}\r\n\r\n\r\n\r\n\r\n.task .icons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.icons span {\r\n    font-weight: 700;\r\n}\r\n\r\n.fa-pencil {\r\n    padding-left: 20px;\r\n}\r\n\r\n.task div .fa-solid {\r\n    font-size: 1.1em;\r\n    transition: all .3s;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.task div .fa-solid:hover {\r\n    transform: scale(1.2);\r\n}\r\n\r\n.fa-trash-can {\r\n    padding-left: 25px;\r\n    padding-right: 15px;\r\n}\r\n\r\n\r\n\r\n.h3ForTaskInfo {\r\n    color: #25291C;\r\n}\r\n\r\n\r\n'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);t&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),r.push(c))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=t.base?s[0]+t.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var m=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var s=t(n,o),d=0;d<a.length;d++){var c=e(a[d]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}a=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{function n(n,r){if(r.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+r.length+" present")}function r(n){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}function t(e){n(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===r(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function o(r){n(1,arguments);var e=t(r);return e.setHours(0,0,0,0),e}function a(r,e){n(2,arguments);var t=o(r),a=o(e);return t.getTime()===a.getTime()}function i(r){return n(1,arguments),a(r,Date.now())}Math.pow(10,8);var A=36e5;function s(n){if(null===n||!0===n||!1===n)return NaN;var r=Number(n);return isNaN(r)?r:r<0?Math.ceil(r):Math.floor(r)}function d(r,e){var t;n(1,arguments);var o=s(null!==(t=null==e?void 0:e.additionalDigits)&&void 0!==t?t:2);if(2!==o&&1!==o&&0!==o)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof r&&"[object String]"!==Object.prototype.toString.call(r))return new Date(NaN);var a,i=m(r);if(i.date){var A=C(i.date,o);a=f(A.restDateString,A.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var d,c=a.getTime(),l=0;if(i.time&&(l=g(i.time),isNaN(l)))return new Date(NaN);if(!i.timezone){var p=new Date(c+l),u=new Date(0);return u.setFullYear(p.getUTCFullYear(),p.getUTCMonth(),p.getUTCDate()),u.setHours(p.getUTCHours(),p.getUTCMinutes(),p.getUTCSeconds(),p.getUTCMilliseconds()),u}return d=x(i.timezone),isNaN(d)?new Date(NaN):new Date(c+l+d)}var c={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},l=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,p=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,u=/^([+-])(\d{2})(?::?(\d{2}))?$/;function m(n){var r,e={},t=n.split(c.dateTimeDelimiter);if(t.length>2)return e;if(/:/.test(t[0])?r=t[0]:(e.date=t[0],r=t[1],c.timeZoneDelimiter.test(e.date)&&(e.date=n.split(c.timeZoneDelimiter)[0],r=n.substr(e.date.length,n.length))),r){var o=c.timezone.exec(r);o?(e.time=r.replace(o[1],""),e.timezone=o[1]):e.time=r}return e}function C(n,r){var e=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+r)+"})|(\\d{2}|[+-]\\d{"+(2+r)+"})$)"),t=n.match(e);if(!t)return{year:NaN,restDateString:""};var o=t[1]?parseInt(t[1]):null,a=t[2]?parseInt(t[2]):null;return{year:null===a?o:100*a,restDateString:n.slice((t[1]||t[2]).length)}}function f(n,r){if(null===r)return new Date(NaN);var e=n.match(l);if(!e)return new Date(NaN);var t=!!e[4],o=B(e[1]),a=B(e[2])-1,i=B(e[3]),A=B(e[4]),s=B(e[5])-1;if(t)return function(n,r,e){return r>=1&&r<=53&&e>=0&&e<=6}(0,A,s)?function(n,r,e){var t=new Date(0);t.setUTCFullYear(n,0,4);var o=7*(r-1)+e+1-(t.getUTCDay()||7);return t.setUTCDate(t.getUTCDate()+o),t}(r,A,s):new Date(NaN);var d=new Date(0);return function(n,r,e){return r>=0&&r<=11&&e>=1&&e<=(h[r]||(v(n)?29:28))}(r,a,i)&&function(n,r){return r>=1&&r<=(v(n)?366:365)}(r,o)?(d.setUTCFullYear(r,a,Math.max(o,i)),d):new Date(NaN)}function B(n){return n?parseInt(n):1}function g(n){var r=n.match(p);if(!r)return NaN;var e=I(r[1]),t=I(r[2]),o=I(r[3]);return function(n,r,e){return 24===n?0===r&&0===e:e>=0&&e<60&&r>=0&&r<60&&n>=0&&n<25}(e,t,o)?e*A+6e4*t+1e3*o:NaN}function I(n){return n&&parseFloat(n.replace(",","."))||0}function x(n){if("Z"===n)return 0;var r=n.match(u);if(!r)return 0;var e="+"===r[1]?-1:1,t=parseInt(r[2]),o=r[3]&&parseInt(r[3])||0;return function(n,r){return r>=0&&r<=59}(0,o)?e*(t*A+6e4*o):NaN}var h=[31,null,31,30,31,30,31,31,30,31,30,31];function v(n){return n%400==0||n%4==0&&n%100!=0}function y(r,e){n(2,arguments);var o=t(r),a=s(e);return isNaN(a)?new Date(NaN):a?(o.setDate(o.getDate()+a),o):o}function b(r){return n(1,arguments),a(r,y(Date.now(),1))}var k={};function E(){return k}function w(r,e){var o,a,i,A,d,c,l,p;n(1,arguments);var u=E(),m=s(null!==(o=null!==(a=null!==(i=null!==(A=null==e?void 0:e.weekStartsOn)&&void 0!==A?A:null==e||null===(d=e.locale)||void 0===d||null===(c=d.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==i?i:u.weekStartsOn)&&void 0!==a?a:null===(l=u.locale)||void 0===l||null===(p=l.options)||void 0===p?void 0:p.weekStartsOn)&&void 0!==o?o:0);if(!(m>=0&&m<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var C=t(r),f=C.getDay(),B=(f<m?7:0)+f-m;return C.setDate(C.getDate()-B),C.setHours(0,0,0,0),C}function j(r,e,t){n(2,arguments);var o=w(r,t),a=w(e,t);return o.getTime()===a.getTime()}function L(r,e){return n(1,arguments),j(r,Date.now(),e)}var _=e(379),T=e.n(_),S=e(795),N=e.n(S),Y=e(569),z=e.n(Y),D=e(565),M=e.n(D),q=e(216),U=e.n(q),W=e(589),Z=e.n(W),O=e(426),F={};F.styleTagTransform=Z(),F.setAttributes=M(),F.insert=z().bind(null,"head"),F.domAPI=N(),F.insertStyleElement=U(),T()(O.Z,F),O.Z&&O.Z.locals&&O.Z.locals;const H=document.body.scrollHeight;function P(){const n=document.querySelector("#content"),r=document.querySelector(".overlay"),e=document.querySelector(".overlay2"),t=document.querySelector(".add-task"),o=document.querySelector("#close-task-form"),a=document.querySelector("#close-project-form"),i=document.querySelector(".plus"),A=document.querySelector(".today"),s=document.querySelector(".tomorrow"),d=document.querySelector(".this-week"),c=document.querySelector(".completed-tasks"),l=document.querySelector(".add-project"),p=document.querySelector(".add"),u=document.querySelector("#task-input-text"),m=document.querySelector("#task-input-date"),C=document.querySelector("#task-input-textarea"),f=document.querySelector("#task-input-priority"),B=document.querySelector("#task-input-project"),g=document.querySelector("#project-input-text"),I=document.querySelector("#tasks-section-h2"),x=document.querySelector(".tasks-section"),h=document.querySelector(".projects"),v=document.querySelector(".all-tasks");return{content:n,todays_date:new Date,all_tasks:v,projects:h,tasks_section:x,project_input_text:g,task_input_project:B,task_input_priority:f,task_input_priority:f,task_input_textarea:C,task_input_date:m,task_input_text:u,add_project_btn:p,submit_project:l,completed_tasks:c,this_week:d,tomorrow:s,today:A,plus:i,close_project:a,close_task:o,add_task:t,overlay2:e,overlay:r,h2:I}}document.body.style.height=`${H}px`;const G=[],X=[],$=[],R=[];function V(n,r,e,t,o){this.title=n,this.desc=e,this.due=r,this.priority=t,this.project=o}function J(n){const r=document.createElement("div");r.classList.add("task"),"Low"==n.priority?r.style.borderLeft="14px solid blue":"Medium"==n.priority?r.style.borderLeft="14px solid orange":r.style.borderLeft="14px solid red";const e=document.createElement("div");e.classList.add("info");const t=document.createElement("div");t.classList.add("radio");const o=document.createElement("input");o.type="radio",t.append(o),e.append(t);const a=document.createElement("div");a.classList.add("title-desc");const i=document.createElement("h3");i.classList.add("h3"),i.textContent=n.title;const A=document.createElement("p");A.classList.add("p"),A.textContent=n.desc,a.append(i,A),e.append(a);const s=document.createElement("div");s.classList.add("icons");const d=document.createElement("div");d.classList.add("date"),d.textContent=n.due,s.append(d);const c=document.createElement("i");c.classList.add("fa-solid","fa-pencil");const l=document.createElement("i");return l.classList.add("fa-solid","fa-trash-can"),s.append(c,l),r.append(e,s),o.addEventListener("click",(e=>{setTimeout((()=>{r.remove()}),150),G.splice(G.indexOf(n),1),X.push(n),R.splice(R.indexOf(n.title),1)})),i.addEventListener("click",(r=>{X.includes(n)?P().content.append(rn(n,i,A,d,"none").overlay3):P().content.append(rn(n,i,A,d,"flex").overlay3)})),l.addEventListener("click",(e=>{r.remove(),G.splice(G.indexOf(n),1),X.splice(X.indexOf(n),1),R.splice(R.indexOf(n.title),1)})),c.addEventListener("click",(r=>{P().content.append(nn(n,i,A,d).overlay_edit)})),X.includes(n)&&(c.style.display="none",o.style.display="none",a.style.paddingLeft="15px"),r}function K(n,r){document.querySelector(".tasks").remove();const e=document.createElement("div");e.classList.add("tasks"),P().tasks_section.append(e);for(let t=0;t<n.length;t++)(i(d(n[t].due))&&" Today"==r||b(d(n[t].due))&&" Tomorrow"==r||L(d(n[t].due))&&" This Week"==r||" Completed Tasks"==r||" All Tasks"==r)&&e.append(J(n[t]))}function Q(){document.querySelectorAll(".project p").forEach((n=>{n.addEventListener("click",(r=>{P().h2.textContent=n.innerText,P().today.style.backgroundColor="",P().tomorrow.style.backgroundColor="",P().this_week.style.backgroundColor="",P().completed_tasks.style.backgroundColor="",document.querySelector(".tasks").remove();const e=document.createElement("div");e.classList.add("tasks"),P().tasks_section.append(e);for(let n=0;n<G.length;n++)if(G[n].project==r.target.textContent){const r=J(G[n]);e.append(r)}}))}))}function nn(n,r,e,t){const o=document.createElement("div");o.classList.add("overlay-edit");const a=document.createElement("div");a.classList.add("info-box"),o.append(a);const i=document.createElement("div");i.classList.add("heading");const A=document.createElement("h2");A.textContent="Edit Task",i.append(A),a.append(i);const s=document.createElement("hr");a.append(s);const d=document.createElement("form");d.id="form",a.append(d);const c=document.createElement("div");c.classList.add("title");const l=document.createElement("label");l.textContent="Title:";const p=document.createElement("br"),u=document.createElement("input");u.classList.add("overlay-input"),u.type="text",u.id="task-input-text4",c.append(l,p,u),d.append(c);const m=document.createElement("div");m.classList.add("due-date");const C=document.createElement("label");C.textContent="Due Date:";const f=document.createElement("br"),B=document.createElement("input");B.classList.add("overlay-input"),B.type="date",B.id="task-input-date4",m.append(C,f,B),d.append(m);const g=document.createElement("div");g.classList.add("description");const I=document.createElement("label");I.textContent="Description:";const x=document.createElement("br"),h=document.createElement("textarea");h.id="task-input-textarea4",g.append(I,x,h),d.append(g);const v=document.createElement("div");v.classList.add("priority");const y=document.createElement("label");y.textContent="Priority:";const b=document.createElement("br"),k=document.createElement("select");k.classList.add("overlay-select"),k.id="task-input-priority4",k.innerHTML='<option value="Low" selected>Low</option>\n    <option value="Medium" selected>Medium</option>\n    <option value="High" selected>High</option>',v.append(y,b,k),d.append(v);const E=document.createElement("div");E.classList.add("select-project");const w=document.createElement("label");w.textContent="Project:";const j=document.createElement("br"),L=document.createElement("select");L.classList.add("overlay-select"),L.id="task-input-project4",L.innerHTML+='<option value="" selected>N/A</option>';for(let n=0;n<$.length;n++)L.innerHTML+=`<option value="${$[n]}">${$[n]}</option>`;E.append(w,j,L),d.append(E);const _=document.createElement("div");_.classList.add("buttons");const T=document.createElement("button");T.id="close-edit-form",T.classList.add("close"),T.textContent="Close";const S=document.createElement("button");return S.id="finish-edit",S.classList.add("add-task"),S.textContent="Finish Edit",_.append(T,S),a.append(_),T.addEventListener("click",(n=>{o.remove()})),S.addEventListener("click",(a=>{n.title=u.value,n.desc=h.value,n.due=B.value,n.project=L.value,n.priority=k.value,r.textContent=n.title,e.textContent=n.desc,t.textContent=n.due,K(G,document.querySelector("#tasks-section-h2").textContent),o.remove(),console.log(G);for(let n=0;n<G.length;n++)G[n].project==document.querySelector("#tasks-section-h2").textContent&&document.querySelector(".tasks").append(J(G[n]))})),u.value=n.title,B.value=n.due,h.value=n.desc,k.value=n.priority,L.value=n.project,{overlay_edit:o,input:u,input2:B,textarea:h,select:k,select2:L,btn1:T,btn2:S}}function rn(n,r,e,t,o){const a=document.createElement("div");a.classList.add("overlay3");const i=document.createElement("div");i.classList.add("info-box"),a.append(i);const A=document.createElement("div");A.classList.add("heading"),A.style.textAlign="center";const s=document.createElement("h2");s.classList.add("overlay3-title"),s.textContent=n.title,A.append(s),i.append(A);const d=document.createElement("hr");i.append(d);const c=document.createElement("div");c.classList.add("task-info"),i.append(c);const l=document.createElement("div");l.classList.add("due-date"),l.style.paddingBottom="10px";const p=document.createElement("h3");p.classList.add("h3ForTaskInfo"),p.textContent="Due Date:";const u=document.createElement("p");u.classList.add("overlay3-date"),u.textContent=n.due,l.append(p,u),c.append(l);const m=document.createElement("div");m.classList.add("description");const C=document.createElement("h3");C.classList.add("h3ForTaskInfo"),C.textContent="Description:";const f=document.createElement("p");f.classList.add("overlay3-desc"),f.textContent=n.desc,m.append(C,f),c.append(m);const B=document.createElement("div");B.classList.add("priority"),B.style.paddingBottom="10px";const g=document.createElement("h3");g.classList.add("h3ForTaskInfo"),g.textContent="Priority:";const I=document.createElement("p");I.classList.add("overlay3-priority"),I.textContent=n.priority,B.append(g,I),c.append(B);const x=document.createElement("div");x.classList.add("select-project");const h=document.createElement("h3");h.classList.add("h3ForTaskInfo"),h.textContent="Project:";const v=document.createElement("p");v.classList.add("overlay3-project"),console.log(n.project),""==n.project?v.textContent="N/A":v.textContent=n.project,x.append(h,v),c.append(x);const y=document.createElement("div");y.classList.add("buttons");const b=document.createElement("button");b.id="close-edit-task-form",b.classList.add("close"),b.textContent="Close";const k=document.createElement("button");return k.classList.add("edit-btn"),k.textContent="Edit Task",k.style.display=o,y.append(b,k),i.append(y),b.addEventListener("click",(n=>{a.remove()})),k.addEventListener("click",(o=>{a.remove(),P().content.append(nn(n,r,e,t).overlay_edit)})),{overlay3:a,btn1:b,btn2:k}}function en(n,r,e,t,o){P().h2.textContent=n.textContent,n.style.backgroundColor="white",r.style.backgroundColor="",e.style.backgroundColor="",t.style.backgroundColor="",o.style.backgroundColor=""}P().add_task.addEventListener("click",(r=>{if(R.includes(P().task_input_text.value))alert("The task name is already in use");else if(!function(r,e){n(2,arguments);var o=t(r),a=t(e);return o.getTime()<a.getTime()}(d(P().task_input_date.value),P().todays_date)||i(d(P().task_input_date.value)))if(""==P().task_input_text.value||""==P().task_input_date.value||""==P().task_input_textarea.value)alert("Please complete all fields");else{const n=new V(P().task_input_text.value,P().task_input_date.value,P().task_input_textarea.value,P().task_input_priority.value,P().task_input_project.value);G.push(n),console.log(G),R.push(n.title),P().overlay.style.display="none";const r=document.querySelector(".tasks"),e=J(n);(n.project==P().h2.textContent||i(d(n.due))&&" Today"==P().h2.textContent||b(d(n.due))&&" Tomorrow"==P().h2.textContent||L(d(n.due))&&" This Week"==P().h2.textContent)&&r.append(e)}else alert("The date you have chosen has already passed")})),window.addEventListener("DOMContentLoaded",(n=>{P().today.click(),P().h2.textContent=P().today.textContent,P().task_input_project.innerHTML+='<option value="Inbox" selected>N/A</option>',Q(),K(G,n.target.textContent)})),P().all_tasks.addEventListener("click",(n=>{K(G,n.target.textContent),en(n.target,P().today,P().tomorrow,P().this_week,P().completed_tasks)})),P().today.addEventListener("click",(n=>{en(n.target,P().all_tasks,P().tomorrow,P().this_week,P().completed_tasks),K(G,n.target.textContent)})),P().tomorrow.addEventListener("click",(n=>{K(G,n.target.textContent),en(n.target,P().all_tasks,P().today,P().this_week,P().completed_tasks)})),P().this_week.addEventListener("click",(n=>{K(G,n.target.textContent),en(n.target,P().all_tasks,P().today,P().tomorrow,P().completed_tasks)})),P().completed_tasks.addEventListener("click",(n=>{K(X,n.target.textContent),en(n.target,P().today,P().tomorrow,P().this_week,P().all_tasks)})),P().plus.addEventListener("click",(n=>{P().task_input_project.innerHTML='<option value="" selected>N/A</option>';for(let n=0;n<$.length;n++)P().task_input_project.innerHTML+=`<option value="${$[n]}">${$[n]}</option>`;P().overlay.style.display="flex"})),P().add_project_btn.addEventListener("click",(n=>{P().overlay2.style.display="flex"})),P().submit_project.addEventListener("click",(n=>{if($.includes(P().project_input_text.value))alert("Project already exists");else{P().projects.append(function(n){const r=document.createElement("div");r.classList.add("project");const e=document.createElement("p");e.textContent=n;const t=document.createElement("i");return t.classList.add("fa-solid","fa-trash-can"),r.append(e,t),r.addEventListener("mouseover",(n=>{t.style.display="flex"})),r.addEventListener("mouseout",(n=>{t.style.display="none"})),t.addEventListener("click",(n=>{P().h2.textContent="",console.log("Projects Created",$),console.log("Tasks Created",G),r.remove(),$.splice($.indexOf(e.textContent),1);for(let n=0;n<G.length;n++)for(let r in G[n])G[n][r]==e.textContent&&(G.splice(G.indexOf(G[n]),1),R.splice(R.indexOf(G[n].title),1));console.log("Projects Created",$),console.log("Tasks Created",G)})),r}(P().project_input_text.value)),$.push(P().project_input_text.value),P().overlay2.style.display="none";for(let n=$.indexOf($[$.length-1]);n<$.length;n++)P().task_input_project.innerHTML+=`<option value="${$[n]}">${$[n]}</option>`;Q()}})),P().close_task.addEventListener("click",(n=>{P().overlay.style.display="none"})),P().close_project.addEventListener("click",(n=>{P().overlay2.style.display="none"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQ3RDc1IsRUFBVzdPLE9BQU82TyxFQUFXNkIsUUFBUWhDLEVBQU1uUixHQUFHd1IsT0FBUSxJQUlsRS9KLFFBQVFpTyxJQUFJLG1CQUFvQnJFLEdBQ2hDNUosUUFBUWlPLElBQUksZ0JBQWlCdkUsRUFBTSxJQUdoQ1MsQ0FDWCxDQWhMZ0N1RixDQUFnQnhILElBQVFrQixtQkFBbUJ4RCxRQUNuRWdFLEVBQWdCcFMsS0FBSzBRLElBQVFrQixtQkFBbUJ4RCxPQUNoRHNDLElBQVFFLFNBQVN0TSxNQUFNa1EsUUFBVSxPQUNqQyxJQUFJLElBQUl6VCxFQUFJcVIsRUFBZ0I4QixRQUFROUIsRUFBZ0JBLEVBQWdCdlIsT0FBUyxJQUFLRSxFQUFJcVIsRUFBZ0J2UixPQUFRRSxJQUMxRzJQLElBQVFpQixtQkFBbUJ1RSxXQUFhLGtCQUFrQjlELEVBQWdCclIsT0FBT3FSLEVBQWdCclIsY0FFckc4RixHQUNKLENBRUEsSUFNSjZKLElBQVFJLFdBQVdrRCxpQkFBaUIsU0FBU2pQLElBQ3pDMkwsSUFBUUMsUUFBUXJNLE1BQU1rUSxRQUFVLE1BQU0sSUFHMUM5RCxJQUFRSyxjQUFjaUQsaUJBQWlCLFNBQVNqUCxJQUM1QzJMLElBQVFFLFNBQVN0TSxNQUFNa1EsUUFBVSxNQUFNLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vc3RhcnRPZkRheS9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzU2FtZURheS9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzVG9kYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9jb25zdGFudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3RvSW50ZWdlci9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3BhcnNlSVNPL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vYWRkRGF5cy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzVG9tb3Jyb3cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2RlZmF1bHRPcHRpb25zL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vc3RhcnRPZldlZWsvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9pc1NhbWVXZWVrL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vaXNUaGlzV2Vlay9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vaXNCZWZvcmUvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XFxyXFxuICAgIGNvbG9yOiByZ2IoNTEsNTAsNTApO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gIHdpZHRoOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3NUE3QztcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbn1cXHJcXG5cXHJcXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcXHJcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDVweCAjYjhiOGI4OyBcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG59XFxyXFxuXFxyXFxuI2NvbnRlbnQge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4uaGVhZGVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3NUE3QztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogNDhweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDFweCAzcHggI2ZmZmZmZjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHotaW5kZXg6IDU7XFxyXFxufVxcclxcblxcclxcbi5uYXYtbGlua3Mge1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XFxyXFxufVxcclxcblxcclxcbi5uYXYtbGlua3MgLmxvZ28ge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xcclxcbn0gXFxyXFxuXFxyXFxuLm5hdi1saW5rcyAubG9nbyBoMSB7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxubmF2IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGdyaWQtY29sdW1uOiAzIC8gNDtcXHJcXG59XFxyXFxuXFxyXFxubmF2IC5wbHVzIHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjJlbTtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuNXM7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgY29sb3I6ICNFNzVBN0M7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEzcHg7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxuICAgIHBhZGRpbmc6IDAgMTBweDtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxubmF2IC5wbHVzOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcclxcbn1cXHJcXG5cXHJcXG5ociB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuLm1haW4ge1xcclxcbiAgICBtYXJnaW4tdG9wOiA0OHB4O1xcclxcbiAgICBtYXJnaW4tbGVmdDogMjN2dztcXHJcXG4gICAgLyogcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBsZWZ0OiAyM3Z3O1xcclxcbiAgICByaWdodDogMDtcXHJcXG4gICAgdG9wOiA0OHB4OyAqL1xcclxcbn1cXHJcXG5cXHJcXG5saSB7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHJcXG59XFxyXFxuXFxyXFxuLnNpZ25pbiB7XFxyXFxuICAgIHBhZGRpbmc6IDdweCAyMHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgZm9udC1zaXplOiAxLjAyZW07XFxyXFxuICAgIGNvbG9yOiAjMjUyOTFDO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciB7XFxyXFxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQ4cHgpO1xcclxcbiAgICBwYWRkaW5nOiAyJSAzJTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YyRjVFQTtcXHJcXG4gICAgd2lkdGg6IDIzdnc7XFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gICAgdG9wOiA0OHB4O1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciAuYSB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuMnNcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXIgLmE6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxuLmFkZCB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYWRkOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbi5mYS1saXN0LWNoZWNrIHtcXHJcXG4gICAgZm9udC1zaXplOiAuOGVtO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ucHJvamVjdCB7XFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxufVxcclxcblxcclxcbi5wcm9qZWN0IGkge1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3QgaTpob3ZlciB7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3QgcCB7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBmb250LXNpemU6IDEuMWVtO1xcclxcbiAgICB3aWR0aDogNzAlO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdDpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ucHJvamVjdCBwOjpiZWZvcmUge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGxlZnQ6IDE1cHg7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYm90dG9tOiAwO1xcclxcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xcclxcbiAgICBjb250ZW50OiBcXFwiXFxcIjtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgd2lkdGg6IDEwcHg7XFxyXFxuICAgIGhlaWdodDogMTBweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiOGI4Yjg7XFxyXFxufVxcclxcblxcclxcblxcclxcbi50YXNrcy1zZWN0aW9uIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXHJcXG4gICAgcGFkZGluZzogMyU7XFxyXFxufVxcclxcblxcclxcbi50YXNrcy1zZWN0aW9uIGgyIHtcXHJcXG4gICAgY29sb3I6IHJnYig1MSw1MCw1MCk7XFxyXFxuICAgIGZvbnQtc2l6ZTogMi4xcmVtO1xcclxcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxyXFxuXFxyXFxuLm92ZXJsYXkge1xcclxcbiAgICAvKiBkaXNwbGF5OiBmbGV4OyAqL1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzXFxyXFxufVxcclxcblxcclxcbi5vdmVybGF5LWVkaXQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAvKiBkaXNwbGF5OiBub25lOyAqL1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ub3ZlcmxheTIge1xcclxcbiAgICAvKiBkaXNwbGF5OiBmbGV4OyAqL1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG5cXHJcXG4ub3ZlcmxheTMge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAvKiBkaXNwbGF5OiBub25lOyAqL1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG5cXHJcXG4ub3ZlcmxheTMtZGVzYyB7XFxyXFxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbi5pbmZvLWJveCB7XFxyXFxuICAgIHdpZHRoOiA2MCU7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uaW5mby1ib3ggLmhlYWRpbmcge1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4jZm9ybSB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jZm9ybTIge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnI7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxufVxcclxcblxcclxcblxcclxcbi50YXNrLWluZm8ge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWlubWF4KDFmciwgNjBweCkgMWZyO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5sYWJlbCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxufVxcclxcblxcclxcbi5vdmVybGF5LWlucHV0LCAub3ZlcmxheS1zZWxlY3Qge1xcclxcbiAgICB3aWR0aDogOTAlO1xcclxcbiAgICBwYWRkaW5nOiA4cHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxyXFxuICAgIGZvbnQtc2l6ZTogMWVtO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbm9wdGlvblt2YWx1ZT1cXFwiTWVkaXVtXFxcIl06aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTc1QTdDO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dDpmb2N1cywgc2VsZWN0OmZvY3VzLCB0ZXh0YXJlYTpmb2N1cyB7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcblxcclxcbi5kZXNjcmlwdGlvbiB7XFxyXFxuICAgIGdyaWQtcm93OiAyIC8gNDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbnMge1xcclxcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXHJcXG4gICAgY29sdW1uLWdhcDogN3B4O1xcclxcbiAgICBncmlkLWNvbHVtbjogMSAvIDM7XFxyXFxufVxcclxcblxcclxcbi5idXR0b25zIGJ1dHRvbiB7XFxyXFxuICAgIHBhZGRpbmc6IDdweCAyMHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcXHJcXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcztcXHJcXG4gICAgZm9udC1zaXplOiAxZW1cXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbnMgYnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA3KTtcXHJcXG59XFxyXFxuXFxyXFxuLmFkZC10YXNrLCAuYWRkLXByb2plY3QsIC5lZGl0LWJ0biB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzVBN0M7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4uY2xvc2Uge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgY29sb3I6ICMyNTI5MUM7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcclxcbn1cXHJcXG5cXHJcXG50ZXh0YXJlYSB7XFxyXFxuICAgIGhlaWdodDogMTIwcHg7XFxyXFxuICAgIHdpZHRoOiA5MCU7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgcmVzaXplOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ub3ZlcmxheTItaW5wdXQge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgcGFkZGluZzogOHB4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcclxcbiAgICBmb250LXNpemU6IDFlbTtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4udGFza3Mge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgLyogaGVpZ2h0OiAxMDAlOyAqL1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLWF1dG8tcm93czogNjBweDtcXHJcXG4gICAgcm93LWdhcDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2sge1xcclxcbiAgICB3aWR0aDogNzUlO1xcclxcbiAgICBoZWlnaHQ6IDYwcHg7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDFmcjtcXHJcXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAzcHggcmdiKDE5MCwgMTkwLCAxOTApO1xcclxcbiAgICBib3JkZXItbGVmdDogMTRweCBzb2xpZCByZWQ7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICAgIC8qIG1hcmdpbi10b3A6IDMwcHg7ICovXFxyXFxuICAgIC8qIGN1cnNvcjogcG9pbnRlcjsgKi9cXHJcXG4gICAgLyogdHJhbnNpdGlvbjogYWxsIC41czsgKi9cXHJcXG4gICAgei1pbmRleDogNDtcXHJcXG59XFxyXFxuXFxyXFxuLyogLnRhc2s6aG92ZXIge1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEpO1xcclxcbn0gKi9cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4uaW5mbyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLnJhZGlvIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aWR0aDogYXV0bztcXHJcXG4gICAgaGVpZ2h0OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dFt0eXBlPVxcXCJyYWRpb1xcXCJdIHtcXHJcXG4gICAgd2lkdGg6IDEuNWVtO1xcclxcbiAgICBoZWlnaHQ6IDEuNWVtO1xcclxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcclxcbiAgICBtYXJnaW46IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi50aXRsZS1kZXNjIHtcXHJcXG4gICAgd2lkdGg6IDM2MHB4O1xcclxcbiAgICBoZWlnaHQ6IDU2cHg7XFxyXFxuICAgIFxcclxcbn1cXHJcXG5cXHJcXG4udGl0bGUtZGVzYyBwLCAudGl0bGUtZGVzYyBoMyB7XFxyXFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IFxcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG59XFxyXFxuXFxyXFxuLnRpdGxlLWRlc2MgaDMge1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XFxyXFxufVxcclxcblxcclxcbi50aXRsZS1kZXNjIGgzOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAyKTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuLnRhc2sgLmljb25zIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxyXFxufVxcclxcblxcclxcbi5pY29ucyBzcGFuIHtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXHJcXG59XFxyXFxuXFxyXFxuLmZhLXBlbmNpbCB7XFxyXFxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2sgZGl2IC5mYS1zb2xpZCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi50YXNrIGRpdiAuZmEtc29saWQ6aG92ZXIge1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxyXFxufVxcclxcblxcclxcbi5mYS10cmFzaC1jYW4ge1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XFxyXFxuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbi5oM0ZvclRhc2tJbmZvIHtcXHJcXG4gICAgY29sb3I6ICMyNTI5MUM7XFxyXFxufVxcclxcblxcclxcblxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsa0NBQWtDO0lBQ2xDLG9CQUFvQjtBQUN4Qjs7O0FBR0E7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUNBQWlDO0lBQ2pDLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osK0JBQStCO0lBQy9CLGVBQWU7SUFDZixPQUFPO0lBQ1AsTUFBTTtJQUNOLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2Isa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFB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SUFDWixhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDBDQUEwQztJQUMxQywyQkFBMkI7SUFDM0IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIseUJBQXlCO0lBQ3pCLFVBQVU7QUFDZDs7QUFFQTs7R0FFRzs7OztBQUlIO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZOztBQUVoQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7Ozs7QUFLQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2Qjs7OztBQUlBO0lBQ0ksY0FBYztBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XFxyXFxuICAgIGNvbG9yOiByZ2IoNTEsNTAsNTApO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gIHdpZHRoOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3NUE3QztcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbn1cXHJcXG5cXHJcXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcXHJcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDVweCAjYjhiOGI4OyBcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG59XFxyXFxuXFxyXFxuI2NvbnRlbnQge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4uaGVhZGVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3NUE3QztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogNDhweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDFweCAzcHggI2ZmZmZmZjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHotaW5kZXg6IDU7XFxyXFxufVxcclxcblxcclxcbi5uYXYtbGlua3Mge1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XFxyXFxufVxcclxcblxcclxcbi5uYXYtbGlua3MgLmxvZ28ge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xcclxcbn0gXFxyXFxuXFxyXFxuLm5hdi1saW5rcyAubG9nbyBoMSB7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxubmF2IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGdyaWQtY29sdW1uOiAzIC8gNDtcXHJcXG59XFxyXFxuXFxyXFxubmF2IC5wbHVzIHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjJlbTtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuNXM7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgY29sb3I6ICNFNzVBN0M7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEzcHg7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxuICAgIHBhZGRpbmc6IDAgMTBweDtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxubmF2IC5wbHVzOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcclxcbn1cXHJcXG5cXHJcXG5ociB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuLm1haW4ge1xcclxcbiAgICBtYXJnaW4tdG9wOiA0OHB4O1xcclxcbiAgICBtYXJnaW4tbGVmdDogMjN2dztcXHJcXG4gICAgLyogcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBsZWZ0OiAyM3Z3O1xcclxcbiAgICByaWdodDogMDtcXHJcXG4gICAgdG9wOiA0OHB4OyAqL1xcclxcbn1cXHJcXG5cXHJcXG5saSB7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHJcXG59XFxyXFxuXFxyXFxuLnNpZ25pbiB7XFxyXFxuICAgIHBhZGRpbmc6IDdweCAyMHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgZm9udC1zaXplOiAxLjAyZW07XFxyXFxuICAgIGNvbG9yOiAjMjUyOTFDO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciB7XFxyXFxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQ4cHgpO1xcclxcbiAgICBwYWRkaW5nOiAyJSAzJTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YyRjVFQTtcXHJcXG4gICAgd2lkdGg6IDIzdnc7XFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gICAgdG9wOiA0OHB4O1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciAuYSB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuMnNcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXIgLmE6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxuLmFkZCB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYWRkOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbi5mYS1saXN0LWNoZWNrIHtcXHJcXG4gICAgZm9udC1zaXplOiAuOGVtO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ucHJvamVjdCB7XFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxufVxcclxcblxcclxcbi5wcm9qZWN0IGkge1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3QgaTpob3ZlciB7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3QgcCB7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcclxcbiAgICBmb250LXNpemU6IDEuMWVtO1xcclxcbiAgICB3aWR0aDogNzAlO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdDpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ucHJvamVjdCBwOjpiZWZvcmUge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGxlZnQ6IDE1cHg7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYm90dG9tOiAwO1xcclxcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xcclxcbiAgICBjb250ZW50OiBcXFwiXFxcIjtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgd2lkdGg6IDEwcHg7XFxyXFxuICAgIGhlaWdodDogMTBweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiOGI4Yjg7XFxyXFxufVxcclxcblxcclxcblxcclxcbi50YXNrcy1zZWN0aW9uIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXHJcXG4gICAgcGFkZGluZzogMyU7XFxyXFxufVxcclxcblxcclxcbi50YXNrcy1zZWN0aW9uIGgyIHtcXHJcXG4gICAgY29sb3I6IHJnYig1MSw1MCw1MCk7XFxyXFxuICAgIGZvbnQtc2l6ZTogMi4xcmVtO1xcclxcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxyXFxuXFxyXFxuLm92ZXJsYXkge1xcclxcbiAgICAvKiBkaXNwbGF5OiBmbGV4OyAqL1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzXFxyXFxufVxcclxcblxcclxcbi5vdmVybGF5LWVkaXQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAvKiBkaXNwbGF5OiBub25lOyAqL1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ub3ZlcmxheTIge1xcclxcbiAgICAvKiBkaXNwbGF5OiBmbGV4OyAqL1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG5cXHJcXG4ub3ZlcmxheTMge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAvKiBkaXNwbGF5OiBub25lOyAqL1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHRvcDogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG5cXHJcXG4ub3ZlcmxheTMtZGVzYyB7XFxyXFxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbi5pbmZvLWJveCB7XFxyXFxuICAgIHdpZHRoOiA2MCU7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uaW5mby1ib3ggLmhlYWRpbmcge1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4jZm9ybSB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4jZm9ybTIge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnI7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHg7XFxyXFxufVxcclxcblxcclxcblxcclxcbi50YXNrLWluZm8ge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWlubWF4KDFmciwgNjBweCkgMWZyO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5sYWJlbCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxufVxcclxcblxcclxcbi5vdmVybGF5LWlucHV0LCAub3ZlcmxheS1zZWxlY3Qge1xcclxcbiAgICB3aWR0aDogOTAlO1xcclxcbiAgICBwYWRkaW5nOiA4cHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxyXFxuICAgIGZvbnQtc2l6ZTogMWVtO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbm9wdGlvblt2YWx1ZT1cXFwiTWVkaXVtXFxcIl06aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTc1QTdDO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dDpmb2N1cywgc2VsZWN0OmZvY3VzLCB0ZXh0YXJlYTpmb2N1cyB7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcblxcclxcbi5kZXNjcmlwdGlvbiB7XFxyXFxuICAgIGdyaWQtcm93OiAyIC8gNDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbnMge1xcclxcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXHJcXG4gICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXHJcXG4gICAgY29sdW1uLWdhcDogN3B4O1xcclxcbiAgICBncmlkLWNvbHVtbjogMSAvIDM7XFxyXFxufVxcclxcblxcclxcbi5idXR0b25zIGJ1dHRvbiB7XFxyXFxuICAgIHBhZGRpbmc6IDdweCAyMHB4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcXHJcXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcztcXHJcXG4gICAgZm9udC1zaXplOiAxZW1cXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbnMgYnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA3KTtcXHJcXG59XFxyXFxuXFxyXFxuLmFkZC10YXNrLCAuYWRkLXByb2plY3QsIC5lZGl0LWJ0biB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzVBN0M7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4uY2xvc2Uge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgY29sb3I6ICMyNTI5MUM7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcclxcbn1cXHJcXG5cXHJcXG50ZXh0YXJlYSB7XFxyXFxuICAgIGhlaWdodDogMTIwcHg7XFxyXFxuICAgIHdpZHRoOiA5MCU7XFxyXFxuICAgIHBhZGRpbmc6IDVweDtcXHJcXG4gICAgcmVzaXplOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ub3ZlcmxheTItaW5wdXQge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgcGFkZGluZzogOHB4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcclxcbiAgICBmb250LXNpemU6IDFlbTtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4udGFza3Mge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgLyogaGVpZ2h0OiAxMDAlOyAqL1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLWF1dG8tcm93czogNjBweDtcXHJcXG4gICAgcm93LWdhcDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2sge1xcclxcbiAgICB3aWR0aDogNzUlO1xcclxcbiAgICBoZWlnaHQ6IDYwcHg7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDFmcjtcXHJcXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAzcHggcmdiKDE5MCwgMTkwLCAxOTApO1xcclxcbiAgICBib3JkZXItbGVmdDogMTRweCBzb2xpZCByZWQ7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICAgIC8qIG1hcmdpbi10b3A6IDMwcHg7ICovXFxyXFxuICAgIC8qIGN1cnNvcjogcG9pbnRlcjsgKi9cXHJcXG4gICAgLyogdHJhbnNpdGlvbjogYWxsIC41czsgKi9cXHJcXG4gICAgei1pbmRleDogNDtcXHJcXG59XFxyXFxuXFxyXFxuLyogLnRhc2s6aG92ZXIge1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEpO1xcclxcbn0gKi9cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4uaW5mbyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLnJhZGlvIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aWR0aDogYXV0bztcXHJcXG4gICAgaGVpZ2h0OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dFt0eXBlPVxcXCJyYWRpb1xcXCJdIHtcXHJcXG4gICAgd2lkdGg6IDEuNWVtO1xcclxcbiAgICBoZWlnaHQ6IDEuNWVtO1xcclxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcclxcbiAgICBtYXJnaW46IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi50aXRsZS1kZXNjIHtcXHJcXG4gICAgd2lkdGg6IDM2MHB4O1xcclxcbiAgICBoZWlnaHQ6IDU2cHg7XFxyXFxuICAgIFxcclxcbn1cXHJcXG5cXHJcXG4udGl0bGUtZGVzYyBwLCAudGl0bGUtZGVzYyBoMyB7XFxyXFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IFxcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG59XFxyXFxuXFxyXFxuLnRpdGxlLWRlc2MgaDMge1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XFxyXFxufVxcclxcblxcclxcbi50aXRsZS1kZXNjIGgzOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAyKTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuLnRhc2sgLmljb25zIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxyXFxufVxcclxcblxcclxcbi5pY29ucyBzcGFuIHtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXHJcXG59XFxyXFxuXFxyXFxuLmZhLXBlbmNpbCB7XFxyXFxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2sgZGl2IC5mYS1zb2xpZCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi50YXNrIGRpdiAuZmEtc29saWQ6aG92ZXIge1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxyXFxufVxcclxcblxcclxcbi5mYS10cmFzaC1jYW4ge1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XFxyXFxuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbi5oM0ZvclRhc2tJbmZvIHtcXHJcXG4gICAgY29sb3I6ICMyNTI5MUM7XFxyXFxufVxcclxcblxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVxdWlyZWRBcmdzKHJlcXVpcmVkLCBhcmdzKSB7XG4gIGlmIChhcmdzLmxlbmd0aCA8IHJlcXVpcmVkKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihyZXF1aXJlZCArICcgYXJndW1lbnQnICsgKHJlcXVpcmVkID4gMSA/ICdzJyA6ICcnKSArICcgcmVxdWlyZWQsIGJ1dCBvbmx5ICcgKyBhcmdzLmxlbmd0aCArICcgcHJlc2VudCcpO1xuICB9XG59IiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSB0b0RhdGVcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGFuIGluc3RhbmNlIG9mIERhdGUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIGl0cyBjbG9uZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogKipOb3RlKio6ICphbGwqIERhdGUgYXJndW1lbnRzIHBhc3NlZCB0byBhbnkgKmRhdGUtZm5zKiBmdW5jdGlvbiBpcyBwcm9jZXNzZWQgYnkgYHRvRGF0ZWAuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gYXJndW1lbnQgLSB0aGUgdmFsdWUgdG8gY29udmVydFxuICogQHJldHVybnMge0RhdGV9IHRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ2xvbmUgdGhlIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUobmV3IERhdGUoMjAxNCwgMSwgMTEsIDExLCAzMCwgMzApKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUoMTM5MjA5ODQzMDAwMClcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgYXJnU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50KTsgLy8gQ2xvbmUgdGhlIGRhdGVcblxuICBpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8IF90eXBlb2YoYXJndW1lbnQpID09PSAnb2JqZWN0JyAmJiBhcmdTdHIgPT09ICdbb2JqZWN0IERhdGVdJykge1xuICAgIC8vIFByZXZlbnQgdGhlIGRhdGUgdG8gbG9zZSB0aGUgbWlsbGlzZWNvbmRzIHdoZW4gcGFzc2VkIHRvIG5ldyBEYXRlKCkgaW4gSUUxMFxuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudC5nZXRUaW1lKCkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBhcmd1bWVudCA9PT0gJ251bWJlcicgfHwgYXJnU3RyID09PSAnW29iamVjdCBOdW1iZXJdJykge1xuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IGFyZ1N0ciA9PT0gJ1tvYmplY3QgU3RyaW5nXScpICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcIlN0YXJ0aW5nIHdpdGggdjIuMC4wLWJldGEuMSBkYXRlLWZucyBkb2Vzbid0IGFjY2VwdCBzdHJpbmdzIGFzIGRhdGUgYXJndW1lbnRzLiBQbGVhc2UgdXNlIGBwYXJzZUlTT2AgdG8gcGFyc2Ugc3RyaW5ncy4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjc3RyaW5nLWFyZ3VtZW50c1wiKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcblxuICAgICAgY29uc29sZS53YXJuKG5ldyBFcnJvcigpLnN0YWNrKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgc3RhcnRPZkRheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgZGF5IGZvciB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybiB0aGUgc3RhcnQgb2YgYSBkYXkgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICogVGhlIHJlc3VsdCB3aWxsIGJlIGluIHRoZSBsb2NhbCB0aW1lem9uZS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIG9yaWdpbmFsIGRhdGVcbiAqIEByZXR1cm5zIHtEYXRlfSB0aGUgc3RhcnQgb2YgYSBkYXlcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBUaGUgc3RhcnQgb2YgYSBkYXkgZm9yIDIgU2VwdGVtYmVyIDIwMTQgMTE6NTU6MDA6XG4gKiBjb25zdCByZXN1bHQgPSBzdGFydE9mRGF5KG5ldyBEYXRlKDIwMTQsIDgsIDIsIDExLCA1NSwgMCkpXG4gKiAvLz0+IFR1ZSBTZXAgMDIgMjAxNCAwMDowMDowMFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0YXJ0T2ZEYXkoZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICByZXR1cm4gZGF0ZTtcbn0iLCJpbXBvcnQgc3RhcnRPZkRheSBmcm9tIFwiLi4vc3RhcnRPZkRheS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgaXNTYW1lRGF5XG4gKiBAY2F0ZWdvcnkgRGF5IEhlbHBlcnNcbiAqIEBzdW1tYXJ5IEFyZSB0aGUgZ2l2ZW4gZGF0ZXMgaW4gdGhlIHNhbWUgZGF5IChhbmQgeWVhciBhbmQgbW9udGgpP1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQXJlIHRoZSBnaXZlbiBkYXRlcyBpbiB0aGUgc2FtZSBkYXkgKGFuZCB5ZWFyIGFuZCBtb250aCk/XG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZUxlZnQgLSB0aGUgZmlyc3QgZGF0ZSB0byBjaGVja1xuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZVJpZ2h0IC0gdGhlIHNlY29uZCBkYXRlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gdGhlIGRhdGVzIGFyZSBpbiB0aGUgc2FtZSBkYXkgKGFuZCB5ZWFyIGFuZCBtb250aClcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQXJlIDQgU2VwdGVtYmVyIDA2OjAwOjAwIGFuZCA0IFNlcHRlbWJlciAxODowMDowMCBpbiB0aGUgc2FtZSBkYXk/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVEYXkobmV3IERhdGUoMjAxNCwgOCwgNCwgNiwgMCksIG5ldyBEYXRlKDIwMTQsIDgsIDQsIDE4LCAwKSlcbiAqIC8vPT4gdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBcmUgNCBTZXB0ZW1iZXIgYW5kIDQgT2N0b2JlciBpbiB0aGUgc2FtZSBkYXk/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVEYXkobmV3IERhdGUoMjAxNCwgOCwgNCksIG5ldyBEYXRlKDIwMTQsIDksIDQpKVxuICogLy89PiBmYWxzZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBcmUgNCBTZXB0ZW1iZXIsIDIwMTQgYW5kIDQgU2VwdGVtYmVyLCAyMDE1IGluIHRoZSBzYW1lIGRheT9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzU2FtZURheShuZXcgRGF0ZSgyMDE0LCA4LCA0KSwgbmV3IERhdGUoMjAxNSwgOCwgNCkpXG4gKiAvLz0+IGZhbHNlXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNTYW1lRGF5KGRpcnR5RGF0ZUxlZnQsIGRpcnR5RGF0ZVJpZ2h0KSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZUxlZnRTdGFydE9mRGF5ID0gc3RhcnRPZkRheShkaXJ0eURhdGVMZWZ0KTtcbiAgdmFyIGRhdGVSaWdodFN0YXJ0T2ZEYXkgPSBzdGFydE9mRGF5KGRpcnR5RGF0ZVJpZ2h0KTtcbiAgcmV0dXJuIGRhdGVMZWZ0U3RhcnRPZkRheS5nZXRUaW1lKCkgPT09IGRhdGVSaWdodFN0YXJ0T2ZEYXkuZ2V0VGltZSgpO1xufSIsImltcG9ydCBpc1NhbWVEYXkgZnJvbSBcIi4uL2lzU2FtZURheS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgaXNUb2RheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBJcyB0aGUgZ2l2ZW4gZGF0ZSB0b2RheT9cbiAqIEBwdXJlIGZhbHNlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBJcyB0aGUgZ2l2ZW4gZGF0ZSB0b2RheT9cbiAqXG4gKiA+IOKaoO+4jyBQbGVhc2Ugbm90ZSB0aGF0IHRoaXMgZnVuY3Rpb24gaXMgbm90IHByZXNlbnQgaW4gdGhlIEZQIHN1Ym1vZHVsZSBhc1xuICogPiBpdCB1c2VzIGBEYXRlLm5vdygpYCBpbnRlcm5hbGx5IGhlbmNlIGltcHVyZSBhbmQgY2FuJ3QgYmUgc2FmZWx5IGN1cnJpZWQuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBkYXRlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gdGhlIGRhdGUgaXMgdG9kYXlcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyA2IE9jdG9iZXIgMjAxNCwgaXMgNiBPY3RvYmVyIDE0OjAwOjAwIHRvZGF5P1xuICogY29uc3QgcmVzdWx0ID0gaXNUb2RheShuZXcgRGF0ZSgyMDE0LCA5LCA2LCAxNCwgMCkpXG4gKiAvLz0+IHRydWVcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1RvZGF5KGRpcnR5RGF0ZSkge1xuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgcmV0dXJuIGlzU2FtZURheShkaXJ0eURhdGUsIERhdGUubm93KCkpO1xufSIsIi8qKlxuICogRGF5cyBpbiAxIHdlZWsuXG4gKlxuICogQG5hbWUgZGF5c0luV2Vla1xuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuZXhwb3J0IHZhciBkYXlzSW5XZWVrID0gNztcbi8qKlxuICogRGF5cyBpbiAxIHllYXJcbiAqIE9uZSB5ZWFycyBlcXVhbHMgMzY1LjI0MjUgZGF5cyBhY2NvcmRpbmcgdG8gdGhlIGZvcm11bGE6XG4gKlxuICogPiBMZWFwIHllYXIgb2NjdXJlcyBldmVyeSA0IHllYXJzLCBleGNlcHQgZm9yIHllYXJzIHRoYXQgYXJlIGRpdmlzYWJsZSBieSAxMDAgYW5kIG5vdCBkaXZpc2FibGUgYnkgNDAwLlxuICogPiAxIG1lYW4geWVhciA9ICgzNjUrMS80LTEvMTAwKzEvNDAwKSBkYXlzID0gMzY1LjI0MjUgZGF5c1xuICpcbiAqIEBuYW1lIGRheXNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBkYXlzSW5ZZWFyID0gMzY1LjI0MjU7XG4vKipcbiAqIE1heGltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBuYW1lIG1heFRpbWVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtYXhUaW1lID0gTWF0aC5wb3coMTAsIDgpICogMjQgKiA2MCAqIDYwICogMTAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgbWludXRlXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5NaW51dGVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDYwMDAwO1xuLyoqXG4gKiBNaWxsaXNlY29uZHMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5Ib3VyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWlsbGlzZWNvbmRzSW5Ib3VyID0gMzYwMDAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgc2Vjb25kXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5TZWNvbmRcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaWxsaXNlY29uZHNJblNlY29uZCA9IDEwMDA7XG4vKipcbiAqIE1pbmltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBuYW1lIG1pblRpbWVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaW5UaW1lID0gLW1heFRpbWU7XG4vKipcbiAqIE1pbnV0ZXMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgbWludXRlc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1pbnV0ZXNJbkhvdXIgPSA2MDtcbi8qKlxuICogTW9udGhzIGluIDEgcXVhcnRlclxuICpcbiAqIEBuYW1lIG1vbnRoc0luUXVhcnRlclxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1vbnRoc0luUXVhcnRlciA9IDM7XG4vKipcbiAqIE1vbnRocyBpbiAxIHllYXJcbiAqXG4gKiBAbmFtZSBtb250aHNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtb250aHNJblllYXIgPSAxMjtcbi8qKlxuICogUXVhcnRlcnMgaW4gMSB5ZWFyXG4gKlxuICogQG5hbWUgcXVhcnRlcnNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBxdWFydGVyc0luWWVhciA9IDQ7XG4vKipcbiAqIFNlY29uZHMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgc2Vjb25kc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIHNlY29uZHNJbkhvdXIgPSAzNjAwO1xuLyoqXG4gKiBTZWNvbmRzIGluIDEgbWludXRlXG4gKlxuICogQG5hbWUgc2Vjb25kc0luTWludXRlXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgc2Vjb25kc0luTWludXRlID0gNjA7XG4vKipcbiAqIFNlY29uZHMgaW4gMSBkYXlcbiAqXG4gKiBAbmFtZSBzZWNvbmRzSW5EYXlcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5EYXkgPSBzZWNvbmRzSW5Ib3VyICogMjQ7XG4vKipcbiAqIFNlY29uZHMgaW4gMSB3ZWVrXG4gKlxuICogQG5hbWUgc2Vjb25kc0luV2Vla1xuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIHNlY29uZHNJbldlZWsgPSBzZWNvbmRzSW5EYXkgKiA3O1xuLyoqXG4gKiBTZWNvbmRzIGluIDEgeWVhclxuICpcbiAqIEBuYW1lIHNlY29uZHNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5ZZWFyID0gc2Vjb25kc0luRGF5ICogZGF5c0luWWVhcjtcbi8qKlxuICogU2Vjb25kcyBpbiAxIG1vbnRoXG4gKlxuICogQG5hbWUgc2Vjb25kc0luTW9udGhcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5Nb250aCA9IHNlY29uZHNJblllYXIgLyAxMjtcbi8qKlxuICogU2Vjb25kcyBpbiAxIHF1YXJ0ZXJcbiAqXG4gKiBAbmFtZSBzZWNvbmRzSW5RdWFydGVyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgc2Vjb25kc0luUXVhcnRlciA9IHNlY29uZHNJbk1vbnRoICogMzsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b0ludGVnZXIoZGlydHlOdW1iZXIpIHtcbiAgaWYgKGRpcnR5TnVtYmVyID09PSBudWxsIHx8IGRpcnR5TnVtYmVyID09PSB0cnVlIHx8IGRpcnR5TnVtYmVyID09PSBmYWxzZSkge1xuICAgIHJldHVybiBOYU47XG4gIH1cblxuICB2YXIgbnVtYmVyID0gTnVtYmVyKGRpcnR5TnVtYmVyKTtcblxuICBpZiAoaXNOYU4obnVtYmVyKSkge1xuICAgIHJldHVybiBudW1iZXI7XG4gIH1cblxuICByZXR1cm4gbnVtYmVyIDwgMCA/IE1hdGguY2VpbChudW1iZXIpIDogTWF0aC5mbG9vcihudW1iZXIpO1xufSIsImltcG9ydCB7IG1pbGxpc2Vjb25kc0luSG91ciwgbWlsbGlzZWNvbmRzSW5NaW51dGUgfSBmcm9tIFwiLi4vY29uc3RhbnRzL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgcGFyc2VJU09cbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgUGFyc2UgSVNPIHN0cmluZ1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUGFyc2UgdGhlIGdpdmVuIHN0cmluZyBpbiBJU08gODYwMSBmb3JtYXQgYW5kIHJldHVybiBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEZ1bmN0aW9uIGFjY2VwdHMgY29tcGxldGUgSVNPIDg2MDEgZm9ybWF0cyBhcyB3ZWxsIGFzIHBhcnRpYWwgaW1wbGVtZW50YXRpb25zLlxuICogSVNPIDg2MDE6IGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDFcbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXNuJ3QgYSBzdHJpbmcsIHRoZSBmdW5jdGlvbiBjYW5ub3QgcGFyc2UgdGhlIHN0cmluZyBvclxuICogdGhlIHZhbHVlcyBhcmUgaW52YWxpZCwgaXQgcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGFyZ3VtZW50IC0gdGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBhbiBvYmplY3Qgd2l0aCBvcHRpb25zLlxuICogQHBhcmFtIHswfDF8Mn0gW29wdGlvbnMuYWRkaXRpb25hbERpZ2l0cz0yXSAtIHRoZSBhZGRpdGlvbmFsIG51bWJlciBvZiBkaWdpdHMgaW4gdGhlIGV4dGVuZGVkIHllYXIgZm9ybWF0XG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHBhcnNlZCBkYXRlIGluIHRoZSBsb2NhbCB0aW1lIHpvbmVcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYG9wdGlvbnMuYWRkaXRpb25hbERpZ2l0c2AgbXVzdCBiZSAwLCAxIG9yIDJcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCBzdHJpbmcgJzIwMTQtMDItMTFUMTE6MzA6MzAnIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSBwYXJzZUlTTygnMjAxNC0wMi0xMVQxMTozMDozMCcpXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHN0cmluZyAnKzAyMDE0MTAxJyB0byBkYXRlLFxuICogLy8gaWYgdGhlIGFkZGl0aW9uYWwgbnVtYmVyIG9mIGRpZ2l0cyBpbiB0aGUgZXh0ZW5kZWQgeWVhciBmb3JtYXQgaXMgMTpcbiAqIGNvbnN0IHJlc3VsdCA9IHBhcnNlSVNPKCcrMDIwMTQxMDEnLCB7IGFkZGl0aW9uYWxEaWdpdHM6IDEgfSlcbiAqIC8vPT4gRnJpIEFwciAxMSAyMDE0IDAwOjAwOjAwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VJU08oYXJndW1lbnQsIG9wdGlvbnMpIHtcbiAgdmFyIF9vcHRpb25zJGFkZGl0aW9uYWxEaTtcblxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIGFkZGl0aW9uYWxEaWdpdHMgPSB0b0ludGVnZXIoKF9vcHRpb25zJGFkZGl0aW9uYWxEaSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hZGRpdGlvbmFsRGlnaXRzKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyRhZGRpdGlvbmFsRGkgIT09IHZvaWQgMCA/IF9vcHRpb25zJGFkZGl0aW9uYWxEaSA6IDIpO1xuXG4gIGlmIChhZGRpdGlvbmFsRGlnaXRzICE9PSAyICYmIGFkZGl0aW9uYWxEaWdpdHMgIT09IDEgJiYgYWRkaXRpb25hbERpZ2l0cyAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdhZGRpdGlvbmFsRGlnaXRzIG11c3QgYmUgMCwgMSBvciAyJyk7XG4gIH1cblxuICBpZiAoISh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudCkgPT09ICdbb2JqZWN0IFN0cmluZ10nKSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgdmFyIGRhdGVTdHJpbmdzID0gc3BsaXREYXRlU3RyaW5nKGFyZ3VtZW50KTtcbiAgdmFyIGRhdGU7XG5cbiAgaWYgKGRhdGVTdHJpbmdzLmRhdGUpIHtcbiAgICB2YXIgcGFyc2VZZWFyUmVzdWx0ID0gcGFyc2VZZWFyKGRhdGVTdHJpbmdzLmRhdGUsIGFkZGl0aW9uYWxEaWdpdHMpO1xuICAgIGRhdGUgPSBwYXJzZURhdGUocGFyc2VZZWFyUmVzdWx0LnJlc3REYXRlU3RyaW5nLCBwYXJzZVllYXJSZXN1bHQueWVhcik7XG4gIH1cblxuICBpZiAoIWRhdGUgfHwgaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIH1cblxuICB2YXIgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gIHZhciB0aW1lID0gMDtcbiAgdmFyIG9mZnNldDtcblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZSkge1xuICAgIHRpbWUgPSBwYXJzZVRpbWUoZGF0ZVN0cmluZ3MudGltZSk7XG5cbiAgICBpZiAoaXNOYU4odGltZSkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkYXRlU3RyaW5ncy50aW1lem9uZSkge1xuICAgIG9mZnNldCA9IHBhcnNlVGltZXpvbmUoZGF0ZVN0cmluZ3MudGltZXpvbmUpO1xuXG4gICAgaWYgKGlzTmFOKG9mZnNldCkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgZGlydHlEYXRlID0gbmV3IERhdGUodGltZXN0YW1wICsgdGltZSk7IC8vIGpzIHBhcnNlZCBzdHJpbmcgYXNzdW1pbmcgaXQncyBpbiBVVEMgdGltZXpvbmVcbiAgICAvLyBidXQgd2UgbmVlZCBpdCB0byBiZSBwYXJzZWQgaW4gb3VyIHRpbWV6b25lXG4gICAgLy8gc28gd2UgdXNlIHV0YyB2YWx1ZXMgdG8gYnVpbGQgZGF0ZSBpbiBvdXIgdGltZXpvbmUuXG4gICAgLy8gWWVhciB2YWx1ZXMgZnJvbSAwIHRvIDk5IG1hcCB0byB0aGUgeWVhcnMgMTkwMCB0byAxOTk5XG4gICAgLy8gc28gc2V0IHllYXIgZXhwbGljaXRseSB3aXRoIHNldEZ1bGxZZWFyLlxuXG4gICAgdmFyIHJlc3VsdCA9IG5ldyBEYXRlKDApO1xuICAgIHJlc3VsdC5zZXRGdWxsWWVhcihkaXJ0eURhdGUuZ2V0VVRDRnVsbFllYXIoKSwgZGlydHlEYXRlLmdldFVUQ01vbnRoKCksIGRpcnR5RGF0ZS5nZXRVVENEYXRlKCkpO1xuICAgIHJlc3VsdC5zZXRIb3VycyhkaXJ0eURhdGUuZ2V0VVRDSG91cnMoKSwgZGlydHlEYXRlLmdldFVUQ01pbnV0ZXMoKSwgZGlydHlEYXRlLmdldFVUQ1NlY29uZHMoKSwgZGlydHlEYXRlLmdldFVUQ01pbGxpc2Vjb25kcygpKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlKHRpbWVzdGFtcCArIHRpbWUgKyBvZmZzZXQpO1xufVxudmFyIHBhdHRlcm5zID0ge1xuICBkYXRlVGltZURlbGltaXRlcjogL1tUIF0vLFxuICB0aW1lWm9uZURlbGltaXRlcjogL1taIF0vaSxcbiAgdGltZXpvbmU6IC8oW1orLV0uKikkL1xufTtcbnZhciBkYXRlUmVnZXggPSAvXi0/KD86KFxcZHszfSl8KFxcZHsyfSkoPzotPyhcXGR7Mn0pKT98VyhcXGR7Mn0pKD86LT8oXFxkezF9KSk/fCkkLztcbnZhciB0aW1lUmVnZXggPSAvXihcXGR7Mn0oPzpbLixdXFxkKik/KSg/Ojo/KFxcZHsyfSg/OlsuLF1cXGQqKT8pKT8oPzo6PyhcXGR7Mn0oPzpbLixdXFxkKik/KSk/JC87XG52YXIgdGltZXpvbmVSZWdleCA9IC9eKFsrLV0pKFxcZHsyfSkoPzo6PyhcXGR7Mn0pKT8kLztcblxuZnVuY3Rpb24gc3BsaXREYXRlU3RyaW5nKGRhdGVTdHJpbmcpIHtcbiAgdmFyIGRhdGVTdHJpbmdzID0ge307XG4gIHZhciBhcnJheSA9IGRhdGVTdHJpbmcuc3BsaXQocGF0dGVybnMuZGF0ZVRpbWVEZWxpbWl0ZXIpO1xuICB2YXIgdGltZVN0cmluZzsgLy8gVGhlIHJlZ2V4IG1hdGNoIHNob3VsZCBvbmx5IHJldHVybiBhdCBtYXhpbXVtIHR3byBhcnJheSBlbGVtZW50cy5cbiAgLy8gW2RhdGVdLCBbdGltZV0sIG9yIFtkYXRlLCB0aW1lXS5cblxuICBpZiAoYXJyYXkubGVuZ3RoID4gMikge1xuICAgIHJldHVybiBkYXRlU3RyaW5ncztcbiAgfVxuXG4gIGlmICgvOi8udGVzdChhcnJheVswXSkpIHtcbiAgICB0aW1lU3RyaW5nID0gYXJyYXlbMF07XG4gIH0gZWxzZSB7XG4gICAgZGF0ZVN0cmluZ3MuZGF0ZSA9IGFycmF5WzBdO1xuICAgIHRpbWVTdHJpbmcgPSBhcnJheVsxXTtcblxuICAgIGlmIChwYXR0ZXJucy50aW1lWm9uZURlbGltaXRlci50ZXN0KGRhdGVTdHJpbmdzLmRhdGUpKSB7XG4gICAgICBkYXRlU3RyaW5ncy5kYXRlID0gZGF0ZVN0cmluZy5zcGxpdChwYXR0ZXJucy50aW1lWm9uZURlbGltaXRlcilbMF07XG4gICAgICB0aW1lU3RyaW5nID0gZGF0ZVN0cmluZy5zdWJzdHIoZGF0ZVN0cmluZ3MuZGF0ZS5sZW5ndGgsIGRhdGVTdHJpbmcubGVuZ3RoKTtcbiAgICB9XG4gIH1cblxuICBpZiAodGltZVN0cmluZykge1xuICAgIHZhciB0b2tlbiA9IHBhdHRlcm5zLnRpbWV6b25lLmV4ZWModGltZVN0cmluZyk7XG5cbiAgICBpZiAodG9rZW4pIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nLnJlcGxhY2UodG9rZW5bMV0sICcnKTtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWV6b25lID0gdG9rZW5bMV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYXRlU3RyaW5ncztcbn1cblxuZnVuY3Rpb24gcGFyc2VZZWFyKGRhdGVTdHJpbmcsIGFkZGl0aW9uYWxEaWdpdHMpIHtcbiAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCgnXig/OihcXFxcZHs0fXxbKy1dXFxcXGR7JyArICg0ICsgYWRkaXRpb25hbERpZ2l0cykgKyAnfSl8KFxcXFxkezJ9fFsrLV1cXFxcZHsnICsgKDIgKyBhZGRpdGlvbmFsRGlnaXRzKSArICd9KSQpJyk7XG4gIHZhciBjYXB0dXJlcyA9IGRhdGVTdHJpbmcubWF0Y2gocmVnZXgpOyAvLyBJbnZhbGlkIElTTy1mb3JtYXR0ZWQgeWVhclxuXG4gIGlmICghY2FwdHVyZXMpIHJldHVybiB7XG4gICAgeWVhcjogTmFOLFxuICAgIHJlc3REYXRlU3RyaW5nOiAnJ1xuICB9O1xuICB2YXIgeWVhciA9IGNhcHR1cmVzWzFdID8gcGFyc2VJbnQoY2FwdHVyZXNbMV0pIDogbnVsbDtcbiAgdmFyIGNlbnR1cnkgPSBjYXB0dXJlc1syXSA/IHBhcnNlSW50KGNhcHR1cmVzWzJdKSA6IG51bGw7IC8vIGVpdGhlciB5ZWFyIG9yIGNlbnR1cnkgaXMgbnVsbCwgbm90IGJvdGhcblxuICByZXR1cm4ge1xuICAgIHllYXI6IGNlbnR1cnkgPT09IG51bGwgPyB5ZWFyIDogY2VudHVyeSAqIDEwMCxcbiAgICByZXN0RGF0ZVN0cmluZzogZGF0ZVN0cmluZy5zbGljZSgoY2FwdHVyZXNbMV0gfHwgY2FwdHVyZXNbMl0pLmxlbmd0aClcbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VEYXRlKGRhdGVTdHJpbmcsIHllYXIpIHtcbiAgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHllYXJcbiAgaWYgKHllYXIgPT09IG51bGwpIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB2YXIgY2FwdHVyZXMgPSBkYXRlU3RyaW5nLm1hdGNoKGRhdGVSZWdleCk7IC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCBzdHJpbmdcblxuICBpZiAoIWNhcHR1cmVzKSByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgdmFyIGlzV2Vla0RhdGUgPSAhIWNhcHR1cmVzWzRdO1xuICB2YXIgZGF5T2ZZZWFyID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1sxXSk7XG4gIHZhciBtb250aCA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMl0pIC0gMTtcbiAgdmFyIGRheSA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbM10pO1xuICB2YXIgd2VlayA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbNF0pO1xuICB2YXIgZGF5T2ZXZWVrID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1s1XSkgLSAxO1xuXG4gIGlmIChpc1dlZWtEYXRlKSB7XG4gICAgaWYgKCF2YWxpZGF0ZVdlZWtEYXRlKHllYXIsIHdlZWssIGRheU9mV2VlaykpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cblxuICAgIHJldHVybiBkYXlPZklTT1dlZWtZZWFyKHllYXIsIHdlZWssIGRheU9mV2Vlayk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKTtcblxuICAgIGlmICghdmFsaWRhdGVEYXRlKHllYXIsIG1vbnRoLCBkYXkpIHx8ICF2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgfVxuXG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcih5ZWFyLCBtb250aCwgTWF0aC5tYXgoZGF5T2ZZZWFyLCBkYXkpKTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwYXJzZURhdGVVbml0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA/IHBhcnNlSW50KHZhbHVlKSA6IDE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZSh0aW1lU3RyaW5nKSB7XG4gIHZhciBjYXB0dXJlcyA9IHRpbWVTdHJpbmcubWF0Y2godGltZVJlZ2V4KTtcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIE5hTjsgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHRpbWVcblxuICB2YXIgaG91cnMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzFdKTtcbiAgdmFyIG1pbnV0ZXMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzJdKTtcbiAgdmFyIHNlY29uZHMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzNdKTtcblxuICBpZiAoIXZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgcmV0dXJuIGhvdXJzICogbWlsbGlzZWNvbmRzSW5Ib3VyICsgbWludXRlcyAqIG1pbGxpc2Vjb25kc0luTWludXRlICsgc2Vjb25kcyAqIDEwMDA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZVVuaXQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHBhcnNlRmxvYXQodmFsdWUucmVwbGFjZSgnLCcsICcuJykpIHx8IDA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZXpvbmUodGltZXpvbmVTdHJpbmcpIHtcbiAgaWYgKHRpbWV6b25lU3RyaW5nID09PSAnWicpIHJldHVybiAwO1xuICB2YXIgY2FwdHVyZXMgPSB0aW1lem9uZVN0cmluZy5tYXRjaCh0aW1lem9uZVJlZ2V4KTtcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIDA7XG4gIHZhciBzaWduID0gY2FwdHVyZXNbMV0gPT09ICcrJyA/IC0xIDogMTtcbiAgdmFyIGhvdXJzID0gcGFyc2VJbnQoY2FwdHVyZXNbMl0pO1xuICB2YXIgbWludXRlcyA9IGNhcHR1cmVzWzNdICYmIHBhcnNlSW50KGNhcHR1cmVzWzNdKSB8fCAwO1xuXG4gIGlmICghdmFsaWRhdGVUaW1lem9uZShob3VycywgbWludXRlcykpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgcmV0dXJuIHNpZ24gKiAoaG91cnMgKiBtaWxsaXNlY29uZHNJbkhvdXIgKyBtaW51dGVzICogbWlsbGlzZWNvbmRzSW5NaW51dGUpO1xufVxuXG5mdW5jdGlvbiBkYXlPZklTT1dlZWtZZWFyKGlzb1dlZWtZZWFyLCB3ZWVrLCBkYXkpIHtcbiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihpc29XZWVrWWVhciwgMCwgNCk7XG4gIHZhciBmb3VydGhPZkphbnVhcnlEYXkgPSBkYXRlLmdldFVUQ0RheSgpIHx8IDc7XG4gIHZhciBkaWZmID0gKHdlZWsgLSAxKSAqIDcgKyBkYXkgKyAxIC0gZm91cnRoT2ZKYW51YXJ5RGF5O1xuICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBkaWZmKTtcbiAgcmV0dXJuIGRhdGU7XG59IC8vIFZhbGlkYXRpb24gZnVuY3Rpb25zXG4vLyBGZWJydWFyeSBpcyBudWxsIHRvIGhhbmRsZSB0aGUgbGVhcCB5ZWFyICh1c2luZyB8fClcblxuXG52YXIgZGF5c0luTW9udGhzID0gWzMxLCBudWxsLCAzMSwgMzAsIDMxLCAzMCwgMzEsIDMxLCAzMCwgMzEsIDMwLCAzMV07XG5cbmZ1bmN0aW9uIGlzTGVhcFllYXJJbmRleCh5ZWFyKSB7XG4gIHJldHVybiB5ZWFyICUgNDAwID09PSAwIHx8IHllYXIgJSA0ID09PSAwICYmIHllYXIgJSAxMDAgIT09IDA7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRGF0ZSh5ZWFyLCBtb250aCwgZGF0ZSkge1xuICByZXR1cm4gbW9udGggPj0gMCAmJiBtb250aCA8PSAxMSAmJiBkYXRlID49IDEgJiYgZGF0ZSA8PSAoZGF5c0luTW9udGhzW21vbnRoXSB8fCAoaXNMZWFwWWVhckluZGV4KHllYXIpID8gMjkgOiAyOCkpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSB7XG4gIHJldHVybiBkYXlPZlllYXIgPj0gMSAmJiBkYXlPZlllYXIgPD0gKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDM2NiA6IDM2NSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlV2Vla0RhdGUoX3llYXIsIHdlZWssIGRheSkge1xuICByZXR1cm4gd2VlayA+PSAxICYmIHdlZWsgPD0gNTMgJiYgZGF5ID49IDAgJiYgZGF5IDw9IDY7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICBpZiAoaG91cnMgPT09IDI0KSB7XG4gICAgcmV0dXJuIG1pbnV0ZXMgPT09IDAgJiYgc2Vjb25kcyA9PT0gMDtcbiAgfVxuXG4gIHJldHVybiBzZWNvbmRzID49IDAgJiYgc2Vjb25kcyA8IDYwICYmIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDwgNjAgJiYgaG91cnMgPj0gMCAmJiBob3VycyA8IDI1O1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZVRpbWV6b25lKF9ob3VycywgbWludXRlcykge1xuICByZXR1cm4gbWludXRlcyA+PSAwICYmIG1pbnV0ZXMgPD0gNTk7XG59IiwiaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcbmltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgYWRkRGF5c1xuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBBZGQgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgZGF5cyB0byB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEFkZCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBkYXlzIHRvIHRoZSBnaXZlbiBkYXRlLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgZGF0ZSB0byBiZSBjaGFuZ2VkXG4gKiBAcGFyYW0ge051bWJlcn0gYW1vdW50IC0gdGhlIGFtb3VudCBvZiBkYXlzIHRvIGJlIGFkZGVkLiBQb3NpdGl2ZSBkZWNpbWFscyB3aWxsIGJlIHJvdW5kZWQgdXNpbmcgYE1hdGguZmxvb3JgLCBkZWNpbWFscyBsZXNzIHRoYW4gemVybyB3aWxsIGJlIHJvdW5kZWQgdXNpbmcgYE1hdGguY2VpbGAuXG4gKiBAcmV0dXJucyB7RGF0ZX0gLSB0aGUgbmV3IGRhdGUgd2l0aCB0aGUgZGF5cyBhZGRlZFxuICogQHRocm93cyB7VHlwZUVycm9yfSAtIDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEFkZCAxMCBkYXlzIHRvIDEgU2VwdGVtYmVyIDIwMTQ6XG4gKiBjb25zdCByZXN1bHQgPSBhZGREYXlzKG5ldyBEYXRlKDIwMTQsIDgsIDEpLCAxMClcbiAqIC8vPT4gVGh1IFNlcCAxMSAyMDE0IDAwOjAwOjAwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkRGF5cyhkaXJ0eURhdGUsIGRpcnR5QW1vdW50KSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICB2YXIgYW1vdW50ID0gdG9JbnRlZ2VyKGRpcnR5QW1vdW50KTtcblxuICBpZiAoaXNOYU4oYW1vdW50KSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgaWYgKCFhbW91bnQpIHtcbiAgICAvLyBJZiAwIGRheXMsIG5vLW9wIHRvIGF2b2lkIGNoYW5naW5nIHRpbWVzIGluIHRoZSBob3VyIGJlZm9yZSBlbmQgb2YgRFNUXG4gICAgcmV0dXJuIGRhdGU7XG4gIH1cblxuICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBhbW91bnQpO1xuICByZXR1cm4gZGF0ZTtcbn0iLCJpbXBvcnQgYWRkRGF5cyBmcm9tIFwiLi4vYWRkRGF5cy9pbmRleC5qc1wiO1xuaW1wb3J0IGlzU2FtZURheSBmcm9tIFwiLi4vaXNTYW1lRGF5L2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBpc1RvbW9ycm93XG4gKiBAY2F0ZWdvcnkgRGF5IEhlbHBlcnNcbiAqIEBzdW1tYXJ5IElzIHRoZSBnaXZlbiBkYXRlIHRvbW9ycm93P1xuICogQHB1cmUgZmFsc2VcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIElzIHRoZSBnaXZlbiBkYXRlIHRvbW9ycm93P1xuICpcbiAqID4g4pqg77iPIFBsZWFzZSBub3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBub3QgcHJlc2VudCBpbiB0aGUgRlAgc3VibW9kdWxlIGFzXG4gKiA+IGl0IHVzZXMgYERhdGUubm93KClgIGludGVybmFsbHkgaGVuY2UgaW1wdXJlIGFuZCBjYW4ndCBiZSBzYWZlbHkgY3VycmllZC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGRhdGUgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHtCb29sZWFufSB0aGUgZGF0ZSBpcyB0b21vcnJvd1xuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRvZGF5IGlzIDYgT2N0b2JlciAyMDE0LCBpcyA3IE9jdG9iZXIgMTQ6MDA6MDAgdG9tb3Jyb3c/XG4gKiBjb25zdCByZXN1bHQgPSBpc1RvbW9ycm93KG5ldyBEYXRlKDIwMTQsIDksIDcsIDE0LCAwKSlcbiAqIC8vPT4gdHJ1ZVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVG9tb3Jyb3coZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICByZXR1cm4gaXNTYW1lRGF5KGRpcnR5RGF0ZSwgYWRkRGF5cyhEYXRlLm5vdygpLCAxKSk7XG59IiwidmFyIGRlZmF1bHRPcHRpb25zID0ge307XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdE9wdGlvbnMoKSB7XG4gIHJldHVybiBkZWZhdWx0T3B0aW9ucztcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0T3B0aW9ucyhuZXdPcHRpb25zKSB7XG4gIGRlZmF1bHRPcHRpb25zID0gbmV3T3B0aW9ucztcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCB0b0ludGVnZXIgZnJvbSBcIi4uL19saWIvdG9JbnRlZ2VyL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi4vX2xpYi9kZWZhdWx0T3B0aW9ucy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBzdGFydE9mV2Vla1xuICogQGNhdGVnb3J5IFdlZWsgSGVscGVyc1xuICogQHN1bW1hcnkgUmV0dXJuIHRoZSBzdGFydCBvZiBhIHdlZWsgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJuIHRoZSBzdGFydCBvZiBhIHdlZWsgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICogVGhlIHJlc3VsdCB3aWxsIGJlIGluIHRoZSBsb2NhbCB0aW1lem9uZS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIG9yaWdpbmFsIGRhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBhbiBvYmplY3Qgd2l0aCBvcHRpb25zLlxuICogQHBhcmFtIHtMb2NhbGV9IFtvcHRpb25zLmxvY2FsZT1kZWZhdWx0TG9jYWxlXSAtIHRoZSBsb2NhbGUgb2JqZWN0LiBTZWUgW0xvY2FsZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9Mb2NhbGV9XG4gKiBAcGFyYW0gezB8MXwyfDN8NHw1fDZ9IFtvcHRpb25zLndlZWtTdGFydHNPbj0wXSAtIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrICgwIC0gU3VuZGF5KVxuICogQHJldHVybnMge0RhdGV9IHRoZSBzdGFydCBvZiBhIHdlZWtcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYG9wdGlvbnMud2Vla1N0YXJ0c09uYCBtdXN0IGJlIGJldHdlZW4gMCBhbmQgNlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBUaGUgc3RhcnQgb2YgYSB3ZWVrIGZvciAyIFNlcHRlbWJlciAyMDE0IDExOjU1OjAwOlxuICogY29uc3QgcmVzdWx0ID0gc3RhcnRPZldlZWsobmV3IERhdGUoMjAxNCwgOCwgMiwgMTEsIDU1LCAwKSlcbiAqIC8vPT4gU3VuIEF1ZyAzMSAyMDE0IDAwOjAwOjAwXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRoZSB3ZWVrIHN0YXJ0cyBvbiBNb25kYXksIHRoZSBzdGFydCBvZiB0aGUgd2VlayBmb3IgMiBTZXB0ZW1iZXIgMjAxNCAxMTo1NTowMDpcbiAqIGNvbnN0IHJlc3VsdCA9IHN0YXJ0T2ZXZWVrKG5ldyBEYXRlKDIwMTQsIDgsIDIsIDExLCA1NSwgMCksIHsgd2Vla1N0YXJ0c09uOiAxIH0pXG4gKiAvLz0+IE1vbiBTZXAgMDEgMjAxNCAwMDowMDowMFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0YXJ0T2ZXZWVrKGRpcnR5RGF0ZSwgb3B0aW9ucykge1xuICB2YXIgX3JlZiwgX3JlZjIsIF9yZWYzLCBfb3B0aW9ucyR3ZWVrU3RhcnRzT24sIF9vcHRpb25zJGxvY2FsZSwgX29wdGlvbnMkbG9jYWxlJG9wdGlvLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwsIF9kZWZhdWx0T3B0aW9ucyRsb2NhbDI7XG5cbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkZWZhdWx0T3B0aW9ucyA9IGdldERlZmF1bHRPcHRpb25zKCk7XG4gIHZhciB3ZWVrU3RhcnRzT24gPSB0b0ludGVnZXIoKF9yZWYgPSAoX3JlZjIgPSAoX3JlZjMgPSAoX29wdGlvbnMkd2Vla1N0YXJ0c09uID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX29wdGlvbnMkd2Vla1N0YXJ0c09uICE9PSB2b2lkIDAgPyBfb3B0aW9ucyR3ZWVrU3RhcnRzT24gOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUgPSBvcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlJG9wdGlvID0gX29wdGlvbnMkbG9jYWxlLm9wdGlvbnMpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZSRvcHRpbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdGlvbnMkbG9jYWxlJG9wdGlvLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX3JlZjMgIT09IHZvaWQgMCA/IF9yZWYzIDogZGVmYXVsdE9wdGlvbnMud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmMiAhPT0gdm9pZCAwID8gX3JlZjIgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsID0gZGVmYXVsdE9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID0gX2RlZmF1bHRPcHRpb25zJGxvY2FsLm9wdGlvbnMpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmICE9PSB2b2lkIDAgPyBfcmVmIDogMCk7IC8vIFRlc3QgaWYgd2Vla1N0YXJ0c09uIGlzIGJldHdlZW4gMCBhbmQgNiBfYW5kXyBpcyBub3QgTmFOXG5cbiAgaWYgKCEod2Vla1N0YXJ0c09uID49IDAgJiYgd2Vla1N0YXJ0c09uIDw9IDYpKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3dlZWtTdGFydHNPbiBtdXN0IGJlIGJldHdlZW4gMCBhbmQgNiBpbmNsdXNpdmVseScpO1xuICB9XG5cbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgdmFyIGRheSA9IGRhdGUuZ2V0RGF5KCk7XG4gIHZhciBkaWZmID0gKGRheSA8IHdlZWtTdGFydHNPbiA/IDcgOiAwKSArIGRheSAtIHdlZWtTdGFydHNPbjtcbiAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gZGlmZik7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCBzdGFydE9mV2VlayBmcm9tIFwiLi4vc3RhcnRPZldlZWsvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG5cbi8qKlxuICogQG5hbWUgaXNTYW1lV2Vla1xuICogQGNhdGVnb3J5IFdlZWsgSGVscGVyc1xuICogQHN1bW1hcnkgQXJlIHRoZSBnaXZlbiBkYXRlcyBpbiB0aGUgc2FtZSB3ZWVrIChhbmQgbW9udGggYW5kIHllYXIpP1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQXJlIHRoZSBnaXZlbiBkYXRlcyBpbiB0aGUgc2FtZSB3ZWVrIChhbmQgbW9udGggYW5kIHllYXIpP1xuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVMZWZ0IC0gdGhlIGZpcnN0IGRhdGUgdG8gY2hlY2tcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVSaWdodCAtIHRoZSBzZWNvbmQgZGF0ZSB0byBjaGVja1xuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIGFuIG9iamVjdCB3aXRoIG9wdGlvbnMuXG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEBwYXJhbSB7MHwxfDJ8M3w0fDV8Nn0gW29wdGlvbnMud2Vla1N0YXJ0c09uPTBdIC0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsgKDAgLSBTdW5kYXkpXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gdGhlIGRhdGVzIGFyZSBpbiB0aGUgc2FtZSB3ZWVrIChhbmQgbW9udGggYW5kIHllYXIpXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy53ZWVrU3RhcnRzT25gIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEFyZSAzMSBBdWd1c3QgMjAxNCBhbmQgNCBTZXB0ZW1iZXIgMjAxNCBpbiB0aGUgc2FtZSB3ZWVrP1xuICogY29uc3QgcmVzdWx0ID0gaXNTYW1lV2VlayhuZXcgRGF0ZSgyMDE0LCA3LCAzMSksIG5ldyBEYXRlKDIwMTQsIDgsIDQpKVxuICogLy89PiB0cnVlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHdlZWsgc3RhcnRzIHdpdGggTW9uZGF5LFxuICogLy8gYXJlIDMxIEF1Z3VzdCAyMDE0IGFuZCA0IFNlcHRlbWJlciAyMDE0IGluIHRoZSBzYW1lIHdlZWs/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVXZWVrKG5ldyBEYXRlKDIwMTQsIDcsIDMxKSwgbmV3IERhdGUoMjAxNCwgOCwgNCksIHtcbiAqICAgd2Vla1N0YXJ0c09uOiAxXG4gKiB9KVxuICogLy89PiBmYWxzZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBcmUgMSBKYW51YXJ5IDIwMTQgYW5kIDEgSmFudWFyeSAyMDE1IGluIHRoZSBzYW1lIHdlZWs/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVXZWVrKG5ldyBEYXRlKDIwMTQsIDAsIDEpLCBuZXcgRGF0ZSgyMDE1LCAwLCAxKSlcbiAqIC8vPT4gZmFsc2VcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNTYW1lV2VlayhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCwgb3B0aW9ucykge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGVMZWZ0U3RhcnRPZldlZWsgPSBzdGFydE9mV2VlayhkaXJ0eURhdGVMZWZ0LCBvcHRpb25zKTtcbiAgdmFyIGRhdGVSaWdodFN0YXJ0T2ZXZWVrID0gc3RhcnRPZldlZWsoZGlydHlEYXRlUmlnaHQsIG9wdGlvbnMpO1xuICByZXR1cm4gZGF0ZUxlZnRTdGFydE9mV2Vlay5nZXRUaW1lKCkgPT09IGRhdGVSaWdodFN0YXJ0T2ZXZWVrLmdldFRpbWUoKTtcbn0iLCJpbXBvcnQgaXNTYW1lV2VlayBmcm9tIFwiLi4vaXNTYW1lV2Vlay9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcblxuLyoqXG4gKiBAbmFtZSBpc1RoaXNXZWVrXG4gKiBAY2F0ZWdvcnkgV2VlayBIZWxwZXJzXG4gKiBAc3VtbWFyeSBJcyB0aGUgZ2l2ZW4gZGF0ZSBpbiB0aGUgc2FtZSB3ZWVrIGFzIHRoZSBjdXJyZW50IGRhdGU/XG4gKiBAcHVyZSBmYWxzZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogSXMgdGhlIGdpdmVuIGRhdGUgaW4gdGhlIHNhbWUgd2VlayBhcyB0aGUgY3VycmVudCBkYXRlP1xuICpcbiAqID4g4pqg77iPIFBsZWFzZSBub3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBub3QgcHJlc2VudCBpbiB0aGUgRlAgc3VibW9kdWxlIGFzXG4gKiA+IGl0IHVzZXMgYERhdGUubm93KClgIGludGVybmFsbHkgaGVuY2UgaW1wdXJlIGFuZCBjYW4ndCBiZSBzYWZlbHkgY3VycmllZC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGRhdGUgdG8gY2hlY2tcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSB0aGUgb2JqZWN0IHdpdGggb3B0aW9uc1xuICogQHBhcmFtIHtMb2NhbGV9IFtvcHRpb25zLmxvY2FsZT1kZWZhdWx0TG9jYWxlXSAtIHRoZSBsb2NhbGUgb2JqZWN0LiBTZWUgW0xvY2FsZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9Mb2NhbGV9XG4gKiBAcGFyYW0gezB8MXwyfDN8NHw1fDZ9IFtvcHRpb25zLndlZWtTdGFydHNPbj0wXSAtIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrICgwIC0gU3VuZGF5KVxuICogQHJldHVybnMge0Jvb2xlYW59IHRoZSBkYXRlIGlzIGluIHRoaXMgd2Vla1xuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy53ZWVrU3RhcnRzT25gIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRvZGF5IGlzIDI1IFNlcHRlbWJlciAyMDE0LCBpcyAyMSBTZXB0ZW1iZXIgMjAxNCBpbiB0aGlzIHdlZWs/XG4gKiBjb25zdCByZXN1bHQgPSBpc1RoaXNXZWVrKG5ldyBEYXRlKDIwMTQsIDgsIDIxKSlcbiAqIC8vPT4gdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyAyNSBTZXB0ZW1iZXIgMjAxNCBhbmQgd2VlayBzdGFydHMgd2l0aCBNb25kYXlcbiAqIC8vIGlzIDIxIFNlcHRlbWJlciAyMDE0IGluIHRoaXMgd2Vlaz9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzVGhpc1dlZWsobmV3IERhdGUoMjAxNCwgOCwgMjEpLCB7IHdlZWtTdGFydHNPbjogMSB9KVxuICogLy89PiBmYWxzZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1RoaXNXZWVrKGRpcnR5RGF0ZSwgb3B0aW9ucykge1xuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgcmV0dXJuIGlzU2FtZVdlZWsoZGlydHlEYXRlLCBEYXRlLm5vdygpLCBvcHRpb25zKTtcbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgaXNFcXVhbCBmcm9tICdkYXRlLWZucy9pc0VxdWFsJztcclxuaW1wb3J0IGlzVG9kYXkgZnJvbSAnZGF0ZS1mbnMvaXNUb2RheSc7XHJcbmltcG9ydCBwYXJzZUlTTyBmcm9tICdkYXRlLWZucy9wYXJzZUlTTyc7XHJcbmltcG9ydCBpc1RvbW9ycm93IGZyb20gJ2RhdGUtZm5zL2lzVG9tb3Jyb3cnO1xyXG5pbXBvcnQgaXNUaGlzV2VlayBmcm9tICdkYXRlLWZucy9pc1RoaXNXZWVrJztcclxuaW1wb3J0IGlzWWVzdGVyZGF5IGZyb20gJ2RhdGUtZm5zL2lzWWVzdGVyZGF5JztcclxuaW1wb3J0IGlzQmVmb3JlIGZyb20gJ2RhdGUtZm5zL2lzQmVmb3JlJztcclxuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XHJcblxyXG5jb25zdCBoZWlnaHQgPSBkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodDtcclxuZG9jdW1lbnQuYm9keS5zdHlsZS5oZWlnaHQgPSBgJHtoZWlnaHR9cHhgO1xyXG5cclxuLy8gY29uc3Qgd2lkdGggPSBkb2N1bWVudC5ib2R5LnNjcm9sbFdpZHRoO1xyXG4vLyBkb2N1bWVudC5ib2R5LnN0eWxlLndpZHRoID0gYCR7d2lkdGh9cHhgO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBUaGlzIGZ1bmN0aW9uIGhvbGRzIGFsbCBkb20gZWxlbWVudHMgb24gaW5pdGlhbCBwYWdlIGxvYWQuIE9ubHkgdGhlIG9uZXMgdGhhdCB3aWxsIGJlIG5lZWRlZC4gVGhlcmUgYXJlIGFsc28gc29tZSBlbGVtZW50cyB3aXRoIGEgZGlzcGxheSBvZiBub25lXHJcblxyXG5mdW5jdGlvbiBlbGVtcygpIHtcclxuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGVudCcpO1xyXG4gICAgY29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vdmVybGF5Jyk7XHJcbiAgICBjb25zdCBvdmVybGF5MiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vdmVybGF5MicpO1xyXG4gICAgY29uc3QgYWRkX3Rhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLXRhc2snKTtcclxuICAgIGNvbnN0IGNsb3NlX3Rhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2xvc2UtdGFzay1mb3JtJyk7XHJcbiAgICBjb25zdCBjbG9zZV9wcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Nsb3NlLXByb2plY3QtZm9ybScpO1xyXG4gICAgY29uc3QgcGx1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wbHVzJyk7XHJcbiAgICBjb25zdCB0b2RheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RheScpO1xyXG4gICAgY29uc3QgdG9tb3Jyb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9tb3Jyb3cnKTtcclxuICAgIGNvbnN0IHRoaXNfd2VlayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aGlzLXdlZWsnKTtcclxuICAgIGNvbnN0IGNvbXBsZXRlZF90YXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb21wbGV0ZWQtdGFza3MnKTtcclxuICAgIGNvbnN0IHN1Ym1pdF9wcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1wcm9qZWN0Jyk7XHJcbiAgICBjb25zdCBhZGRfcHJvamVjdF9idG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkJyk7XHJcbiAgICBjb25zdCB0YXNrX2lucHV0X3RleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFzay1pbnB1dC10ZXh0Jyk7XHJcbiAgICBjb25zdCB0YXNrX2lucHV0X2RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFzay1pbnB1dC1kYXRlJyk7XHJcbiAgICBjb25zdCB0YXNrX2lucHV0X3RleHRhcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2staW5wdXQtdGV4dGFyZWEnKTtcclxuICAgIGNvbnN0IHRhc2tfaW5wdXRfcHJpb3JpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFzay1pbnB1dC1wcmlvcml0eScpO1xyXG4gICAgY29uc3QgdGFza19pbnB1dF9wcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2staW5wdXQtcHJvamVjdCcpO1xyXG4gICAgY29uc3QgcHJvamVjdF9pbnB1dF90ZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3QtaW5wdXQtdGV4dCcpO1xyXG4gICAgY29uc3QgaDIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza3Mtc2VjdGlvbi1oMicpO1xyXG4gICAgY29uc3QgdGFza3Nfc2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrcy1zZWN0aW9uJyk7XHJcbiAgICBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cycpO1xyXG4gICAgY29uc3QgYWxsX3Rhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFsbC10YXNrcycpO1xyXG4gICAgY29uc3QgdG9kYXlzX2RhdGUgPSBuZXcgRGF0ZSgpO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgY29udGVudCxcclxuICAgICAgICB0b2RheXNfZGF0ZSxcclxuICAgICAgICBhbGxfdGFza3MsXHJcbiAgICAgICAgcHJvamVjdHMsXHJcbiAgICAgICAgdGFza3Nfc2VjdGlvbixcclxuICAgICAgICBwcm9qZWN0X2lucHV0X3RleHQsXHJcbiAgICAgICAgdGFza19pbnB1dF9wcm9qZWN0LFxyXG4gICAgICAgIHRhc2tfaW5wdXRfcHJpb3JpdHksXHJcbiAgICAgICAgdGFza19pbnB1dF9wcmlvcml0eSxcclxuICAgICAgICB0YXNrX2lucHV0X3RleHRhcmVhLFxyXG4gICAgICAgIHRhc2tfaW5wdXRfZGF0ZSxcclxuICAgICAgICB0YXNrX2lucHV0X3RleHQsXHJcbiAgICAgICAgYWRkX3Byb2plY3RfYnRuLFxyXG4gICAgICAgIHN1Ym1pdF9wcm9qZWN0LFxyXG4gICAgICAgIGNvbXBsZXRlZF90YXNrcyxcclxuICAgICAgICB0aGlzX3dlZWssXHJcbiAgICAgICAgdG9tb3Jyb3csXHJcbiAgICAgICAgdG9kYXksXHJcbiAgICAgICAgcGx1cyxcclxuICAgICAgICBjbG9zZV9wcm9qZWN0LFxyXG4gICAgICAgIGNsb3NlX3Rhc2ssXHJcbiAgICAgICAgYWRkX3Rhc2ssXHJcbiAgICAgICAgb3ZlcmxheTIsXHJcbiAgICAgICAgb3ZlcmxheSxcclxuICAgICAgICBoMlxyXG4gICAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmNvbnN0IHRhc2tzID0gW107IC8vIEFsbCB0YXNrcyBjcmVhdGVkIHdpbGwgYmUgcHVzaGVkIHRvIHRoaXMgYXJyYXlcclxuY29uc3QgY29tcGxldGVkID0gW107IC8vIEFsbCBjb21wbGV0ZWQgdGFza3Mgd2lsbCBnbyBoZXJlXHJcbmNvbnN0IHByb2plY3RzQ3JlYXRlZCA9IFtdOyAvLyBBbGwgcHJvamVjdHMnIG5hbWVzKHN0cmluZ3MpIHdpbGwgZ28gaGVyZVxyXG5jb25zdCB0YXNrX25hbWVzID0gW107IC8vIEFsbCB0YXNrIG5hbWVzKHN0cmluZ3MpIHdpbGwgZ28gaGVyZVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmZ1bmN0aW9uIFRhc2sodGl0bGUsIGR1ZV9kYXRlLCBkZXNjLCBwcmlvcml0eSwgcHJvamVjdCkge1xyXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgdGhpcy5kZXNjID0gZGVzYztcclxuICAgIHRoaXMuZHVlID0gZHVlX2RhdGU7XHJcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgICB0aGlzLnByb2plY3QgPSBwcm9qZWN0O1xyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBUaGUgZmlyc3QgdHdvIGlmIHN0YXRlbWVudHMgb2YgdGhpcyBldmVudCBsaXN0ZW5lciBwcmV2ZW50IGR1cGxpY2F0ZSB0YXNrIG5hbWVzIGFuZCBpbnZhbGlkIGRhdGVzXHJcbi8vIEFmdGVyIHRoZSBhZGQgdGFzayBidXR0b24gaXMgY2xpY2tlZCwgdGhlIHRhc2sgY3JlYXRlZCB3aWxsIGJlIGFkZGVkIHRvIHRoZSB0YXNrcyBhcnJheVxyXG4vLyBJZiB0aGUgY3VycmVudCBwYWdlIGlzIGUuZyBUb2RheSwgb25seSB0aGUgdGFza3Mgb2YgVG9kYXkgd2lsbCBiZSBhcHBlbmRlZCB0byB0aGUgRE9NXHJcblxyXG5cclxuZWxlbXMoKS5hZGRfdGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgaWYoIXRhc2tfbmFtZXMuaW5jbHVkZXMoZWxlbXMoKS50YXNrX2lucHV0X3RleHQudmFsdWUpKSB7XHJcbiAgICAgICAgaWYoIShpc0JlZm9yZShwYXJzZUlTTyhlbGVtcygpLnRhc2tfaW5wdXRfZGF0ZS52YWx1ZSksIGVsZW1zKCkudG9kYXlzX2RhdGUpKSB8fCBpc1RvZGF5KHBhcnNlSVNPKGVsZW1zKCkudGFza19pbnB1dF9kYXRlLnZhbHVlKSkpIHtcclxuICAgICAgICAgICAgaWYoZWxlbXMoKS50YXNrX2lucHV0X3RleHQudmFsdWUgPT0gJycgfHwgZWxlbXMoKS50YXNrX2lucHV0X2RhdGUudmFsdWUgPT0gJycgfHwgZWxlbXMoKS50YXNrX2lucHV0X3RleHRhcmVhLnZhbHVlID09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICBhbGVydCgnUGxlYXNlIGNvbXBsZXRlIGFsbCBmaWVsZHMnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHRhc2sgPSBuZXcgVGFzayhlbGVtcygpLnRhc2tfaW5wdXRfdGV4dC52YWx1ZSwgZWxlbXMoKS50YXNrX2lucHV0X2RhdGUudmFsdWUsIGVsZW1zKCkudGFza19pbnB1dF90ZXh0YXJlYS52YWx1ZSwgZWxlbXMoKS50YXNrX2lucHV0X3ByaW9yaXR5LnZhbHVlLCBlbGVtcygpLnRhc2tfaW5wdXRfcHJvamVjdC52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB0YXNrcy5wdXNoKHRhc2spO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGFza3MpO1xyXG4gICAgICAgICAgICAgICAgdGFza19uYW1lcy5wdXNoKHRhc2sudGl0bGUpO1xyXG4gICAgICAgICAgICAgICAgZWxlbXMoKS5vdmVybGF5LnN0eWxlLmRpc3BsYXkgPSBgbm9uZWA7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tzJyk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdfdGFzayA9IHRhc2tDcmVhdGlvbih0YXNrKTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmKHRhc2sucHJvamVjdCA9PSBlbGVtcygpLmgyLnRleHRDb250ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdC5hcHBlbmQobmV3X3Rhc2spO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZihpc1RvZGF5KHBhcnNlSVNPKHRhc2suZHVlKSkgJiYgZWxlbXMoKS5oMi50ZXh0Q29udGVudCA9PSAnIFRvZGF5Jykge1xyXG4gICAgICAgICAgICAgICAgICAgIHQuYXBwZW5kKG5ld190YXNrKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYoaXNUb21vcnJvdyhwYXJzZUlTTyh0YXNrLmR1ZSkpICYmIGVsZW1zKCkuaDIudGV4dENvbnRlbnQgPT0gJyBUb21vcnJvdycpIHtcclxuICAgICAgICAgICAgICAgICAgICB0LmFwcGVuZChuZXdfdGFzayk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKGlzVGhpc1dlZWsocGFyc2VJU08odGFzay5kdWUpKSAmJiBlbGVtcygpLmgyLnRleHRDb250ZW50ID09ICcgVGhpcyBXZWVrJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHQuYXBwZW5kKG5ld190YXNrKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KCdUaGUgZGF0ZSB5b3UgaGF2ZSBjaG9zZW4gaGFzIGFscmVhZHkgcGFzc2VkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBhbGVydCgnVGhlIHRhc2sgbmFtZSBpcyBhbHJlYWR5IGluIHVzZScpO1xyXG4gICAgfVxyXG4gICAgXHJcblxyXG59KTtcclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gSW1tZWRpYXRlbHkgd2hlbiB0aGUgcGFnZSBpcyBsb2FkZWQsIFRoZSBJbmJveCBkZWZhdWx0IHByb2plY3Qgd2lsbCBiZSBjcmVhdGVkIGFuZCBwdXNoZWQgdG8gdGhlIHByb2plY3RzQ3JlYXRlZCBhcnJheVxyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBlID0+IHtcclxuICAgIGVsZW1zKCkudG9kYXkuY2xpY2soKTtcclxuICAgIGVsZW1zKCkuaDIudGV4dENvbnRlbnQgPSBlbGVtcygpLnRvZGF5LnRleHRDb250ZW50O1xyXG4gICAgLy8gZWxlbXMoKS5wcm9qZWN0cy5hcHBlbmQocHJvamVjdENyZWF0aW9uKCdJbmJveCcpKTtcclxuICAgIC8vIHByb2plY3RzQ3JlYXRlZC5wdXNoKCdJbmJveCcpO1xyXG4gICAgZWxlbXMoKS50YXNrX2lucHV0X3Byb2plY3QuaW5uZXJIVE1MICs9IGA8b3B0aW9uIHZhbHVlPVwiSW5ib3hcIiBzZWxlY3RlZD5OL0E8L29wdGlvbj5gO1xyXG4gICAgYSgpO1xyXG4gICAgYXBwZW5kVGFza3ModGFza3MsIGUudGFyZ2V0LnRleHRDb250ZW50KTtcclxufSk7XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFdoZW4gd2UgY2xpY2sgb24gQWxsIFRhc2tzLCBhbGwgdGFza3MgY3JlYXRlZCB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSBET00sIHNhbWUgZ29lcyBmb3IgdGhlIGJlbG93IGV2ZW50IGxpc3RlbmVycy5cclxuXHJcbmVsZW1zKCkuYWxsX3Rhc2tzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICBhcHBlbmRUYXNrcyh0YXNrcywgZS50YXJnZXQudGV4dENvbnRlbnQpO1xyXG4gICAgZChlLnRhcmdldCwgZWxlbXMoKS50b2RheSwgZWxlbXMoKS50b21vcnJvdywgZWxlbXMoKS50aGlzX3dlZWssIGVsZW1zKCkuY29tcGxldGVkX3Rhc2tzKTtcclxufSk7XHJcblxyXG5lbGVtcygpLnRvZGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICBkKGUudGFyZ2V0LCBlbGVtcygpLmFsbF90YXNrcywgZWxlbXMoKS50b21vcnJvdywgZWxlbXMoKS50aGlzX3dlZWssIGVsZW1zKCkuY29tcGxldGVkX3Rhc2tzKTtcclxuICAgIGFwcGVuZFRhc2tzKHRhc2tzLCBlLnRhcmdldC50ZXh0Q29udGVudCk7XHJcbn0pO1xyXG5cclxuZWxlbXMoKS50b21vcnJvdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgYXBwZW5kVGFza3ModGFza3MsIGUudGFyZ2V0LnRleHRDb250ZW50KTtcclxuICAgIGQoZS50YXJnZXQsIGVsZW1zKCkuYWxsX3Rhc2tzLCBlbGVtcygpLnRvZGF5LCBlbGVtcygpLnRoaXNfd2VlaywgZWxlbXMoKS5jb21wbGV0ZWRfdGFza3MpO1xyXG59KTtcclxuXHJcbmVsZW1zKCkudGhpc193ZWVrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICBhcHBlbmRUYXNrcyh0YXNrcywgZS50YXJnZXQudGV4dENvbnRlbnQpO1xyXG4gICAgZChlLnRhcmdldCwgZWxlbXMoKS5hbGxfdGFza3MsIGVsZW1zKCkudG9kYXksIGVsZW1zKCkudG9tb3Jyb3csIGVsZW1zKCkuY29tcGxldGVkX3Rhc2tzKTtcclxufSk7XHJcblxyXG5lbGVtcygpLmNvbXBsZXRlZF90YXNrcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgYXBwZW5kVGFza3MoY29tcGxldGVkLCBlLnRhcmdldC50ZXh0Q29udGVudCk7XHJcbiAgICBkKGUudGFyZ2V0LCBlbGVtcygpLnRvZGF5LCBlbGVtcygpLnRvbW9ycm93LCBlbGVtcygpLnRoaXNfd2VlaywgZWxlbXMoKS5hbGxfdGFza3MpO1xyXG59KTtcclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG5cclxuZWxlbXMoKS5wbHVzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7IC8vIFRoZSBwbHVzIGljb24gb24gdGhlIGhlYWRlclxyXG4gICAgZWxlbXMoKS50YXNrX2lucHV0X3Byb2plY3QuaW5uZXJIVE1MID0gYDxvcHRpb24gdmFsdWU9XCJcIiBzZWxlY3RlZD5OL0E8L29wdGlvbj5gO1xyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHByb2plY3RzQ3JlYXRlZC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGVsZW1zKCkudGFza19pbnB1dF9wcm9qZWN0LmlubmVySFRNTCArPSBgPG9wdGlvbiB2YWx1ZT1cIiR7cHJvamVjdHNDcmVhdGVkW2ldfVwiPiR7cHJvamVjdHNDcmVhdGVkW2ldfTwvb3B0aW9uPmA7XHJcbiAgICB9XHJcbiAgICBlbGVtcygpLm92ZXJsYXkuc3R5bGUuZGlzcGxheSA9IGBmbGV4YDtcclxufSk7XHJcblxyXG5lbGVtcygpLmFkZF9wcm9qZWN0X2J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyBUaGUgQWRkIFByb2plY3QgQnV0dG9uXHJcbiAgICBlbGVtcygpLm92ZXJsYXkyLnN0eWxlLmRpc3BsYXkgPSBgZmxleGA7XHJcbn0pO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFdoZW4gd2UgY2xpY2sgb24gQWRkIFByb2plY3QsIGEgcHJvamVjdCB3aWxsIGJlIGNyZWF0ZWRcclxuXHJcbmVsZW1zKCkuc3VibWl0X3Byb2plY3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcclxuICAgIGlmKCFwcm9qZWN0c0NyZWF0ZWQuaW5jbHVkZXMoZWxlbXMoKS5wcm9qZWN0X2lucHV0X3RleHQudmFsdWUpKSB7XHJcbiAgICAgICAgZWxlbXMoKS5wcm9qZWN0cy5hcHBlbmQocHJvamVjdENyZWF0aW9uKGVsZW1zKCkucHJvamVjdF9pbnB1dF90ZXh0LnZhbHVlKSk7XHJcbiAgICAgICAgcHJvamVjdHNDcmVhdGVkLnB1c2goZWxlbXMoKS5wcm9qZWN0X2lucHV0X3RleHQudmFsdWUpO1xyXG4gICAgICAgIGVsZW1zKCkub3ZlcmxheTIuc3R5bGUuZGlzcGxheSA9IGBub25lYDtcclxuICAgICAgICBmb3IobGV0IGkgPSBwcm9qZWN0c0NyZWF0ZWQuaW5kZXhPZihwcm9qZWN0c0NyZWF0ZWRbcHJvamVjdHNDcmVhdGVkLmxlbmd0aCAtIDFdKTsgaSA8IHByb2plY3RzQ3JlYXRlZC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBlbGVtcygpLnRhc2tfaW5wdXRfcHJvamVjdC5pbm5lckhUTUwgKz0gYDxvcHRpb24gdmFsdWU9XCIke3Byb2plY3RzQ3JlYXRlZFtpXX1cIj4ke3Byb2plY3RzQ3JlYXRlZFtpXX08L29wdGlvbj5gO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFsZXJ0KCdQcm9qZWN0IGFscmVhZHkgZXhpc3RzJyk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuXHJcbmVsZW1zKCkuY2xvc2VfdGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyBjbG9zZXMgdGhlIEFkZCBUYXNrIERpdlxyXG4gICAgZWxlbXMoKS5vdmVybGF5LnN0eWxlLmRpc3BsYXkgPSBgbm9uZWA7XHJcbn0pO1xyXG5cclxuZWxlbXMoKS5jbG9zZV9wcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7IC8vIGNsb3NlcyB0aGUgQWRkIFByb2plY3QgRGl2XHJcbiAgICBlbGVtcygpLm92ZXJsYXkyLnN0eWxlLmRpc3BsYXkgPSBgbm9uZWA7XHJcbn0pO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBUaGlzIGZ1bmN0aW9uIHBvcHVsYXRlcyB0aGUgVGFzayBjcmVhdGVkIHRvIHRoZSBET00gYWxvbmcgd2l0aCBpdHMgZXZlbnQgbGlzdGVuZXJzXHJcblxyXG5mdW5jdGlvbiB0YXNrQ3JlYXRpb24odGFzaykge1xyXG4gICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCd0YXNrJyk7XHJcbiAgICB0YXNrLnByaW9yaXR5ID09ICdMb3cnID8gc3Bhbi5zdHlsZS5ib3JkZXJMZWZ0ID0gYDE0cHggc29saWQgYmx1ZWA6XHJcbiAgICB0YXNrLnByaW9yaXR5ID09ICdNZWRpdW0nID8gc3Bhbi5zdHlsZS5ib3JkZXJMZWZ0ID0gYDE0cHggc29saWQgb3JhbmdlYDogc3Bhbi5zdHlsZS5ib3JkZXJMZWZ0ID0gYDE0cHggc29saWQgcmVkYDtcclxuXHJcbiAgICBjb25zdCBpbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBpbmZvLmNsYXNzTGlzdC5hZGQoJ2luZm8nKTtcclxuICAgIGNvbnN0IHJhZGlvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICByYWRpby5jbGFzc0xpc3QuYWRkKCdyYWRpbycpO1xyXG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xyXG4gICAgaW5wdXQudHlwZSA9ICdyYWRpbyc7XHJcbiAgICByYWRpby5hcHBlbmQoaW5wdXQpO1xyXG4gICAgaW5mby5hcHBlbmQocmFkaW8pO1xyXG4gICAgY29uc3QgdGl0bGVfZGVzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGl0bGVfZGVzYy5jbGFzc0xpc3QuYWRkKCd0aXRsZS1kZXNjJyk7XHJcbiAgICBjb25zdCBoMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XHJcbiAgICBoMy5jbGFzc0xpc3QuYWRkKCdoMycpO1xyXG4gICAgaDMudGV4dENvbnRlbnQgPSB0YXNrLnRpdGxlO1xyXG4gICAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIHAuY2xhc3NMaXN0LmFkZCgncCcpO1xyXG4gICAgcC50ZXh0Q29udGVudCA9IHRhc2suZGVzYztcclxuICAgIHRpdGxlX2Rlc2MuYXBwZW5kKGgzLCBwKTtcclxuICAgIGluZm8uYXBwZW5kKHRpdGxlX2Rlc2MpO1xyXG5cclxuICAgIGNvbnN0IGljb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBpY29ucy5jbGFzc0xpc3QuYWRkKCdpY29ucycpO1xyXG4gICAgY29uc3Qgc3BhbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHNwYW4yLmNsYXNzTGlzdC5hZGQoJ2RhdGUnKTtcclxuICAgIHNwYW4yLnRleHRDb250ZW50ID0gdGFzay5kdWU7XHJcbiAgICBpY29ucy5hcHBlbmQoc3BhbjIpO1xyXG4gICAgY29uc3QgcGVuY2lsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xyXG4gICAgcGVuY2lsLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLXBlbmNpbCcpO1xyXG4gICAgY29uc3QgdHJhc2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XHJcbiAgICB0cmFzaC5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS10cmFzaC1jYW4nKTtcclxuICAgIGljb25zLmFwcGVuZChwZW5jaWwsIHRyYXNoKTtcclxuXHJcbiAgICBzcGFuLmFwcGVuZChpbmZvLCBpY29ucyk7XHJcblxyXG5cclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7ICAvLyBUaGUgcmFkaW8gYnV0dG9uIHRoYXQgY29tcGxldGVzIGEgdGFza1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBzcGFuLnJlbW92ZSgpO1xyXG4gICAgICAgIH0sIDE1MCk7XHJcbiAgICAgICAgdGFza3Muc3BsaWNlKHRhc2tzLmluZGV4T2YodGFzayksIDEpO1xyXG4gICAgICAgIGNvbXBsZXRlZC5wdXNoKHRhc2spO1xyXG4gICAgICAgIHRhc2tfbmFtZXMuc3BsaWNlKHRhc2tfbmFtZXMuaW5kZXhPZih0YXNrLnRpdGxlKSwgMSk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgaDMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHsgLy8gV2UgY2xpY2sgb24gdGhpcyB3aGVuIHdlIHdhbnQgdG8ga25vdyBtb3JlIGFib3V0IHRoZSB0YXNrXHJcbiAgICAgICAgaWYoY29tcGxldGVkLmluY2x1ZGVzKHRhc2spKSB7XHJcbiAgICAgICAgICAgIGVsZW1zKCkuY29udGVudC5hcHBlbmQodmlldyh0YXNrLCBoMywgcCwgc3BhbjIsICdub25lJykub3ZlcmxheTMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVsZW1zKCkuY29udGVudC5hcHBlbmQodmlldyh0YXNrLCBoMywgcCwgc3BhbjIsICdmbGV4Jykub3ZlcmxheTMpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuXHJcbiAgICB0cmFzaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyBEZWxldGluZyBhIHRhc2tcclxuICAgICAgICBzcGFuLnJlbW92ZSgpO1xyXG4gICAgICAgIHRhc2tzLnNwbGljZSh0YXNrcy5pbmRleE9mKHRhc2spLCAxKTtcclxuICAgICAgICBjb21wbGV0ZWQuc3BsaWNlKGNvbXBsZXRlZC5pbmRleE9mKHRhc2spLCAxKTtcclxuICAgICAgICB0YXNrX25hbWVzLnNwbGljZSh0YXNrX25hbWVzLmluZGV4T2YodGFzay50aXRsZSksIDEpO1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIHBlbmNpbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyBFZGl0aW5nIGEgdGFza1xyXG4gICAgICAgIGVsZW1zKCkuY29udGVudC5hcHBlbmQoZWRpdCh0YXNrLCBoMywgcCwgc3BhbjIpLm92ZXJsYXlfZWRpdCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZihjb21wbGV0ZWQuaW5jbHVkZXModGFzaykpIHsgLy8gSWYgdGhlIHJhZGlvIGJ1dHRvbiBoYXMgYmVlbiBjbGlja2VkLCBtZWFuaW5nIHRoZSB0YXNrIGhhcyBiZWVuIGNvbXBsZXRlZCwgd2UgY2FuIG5vIGxvbmdlciBlZGl0IHRoZSBcclxuICAgICAgICAvLyB0YXNrIG9yIGNvbXBsZXRlIGFnYWluIHdpdGggdGhlIHJhZGlvIGJ1dHRvbiB3aGljaCB3b3VsZCBjYXVzZSBwcm9ibGVtcy4gVGhlc2Ugb3B0aW9uIGRpc2FwcGVhciBhZnRlciB3ZSBjb21wbGV0ZSBhIHRhc2tcclxuICAgICAgICBwZW5jaWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBpbnB1dC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIHRpdGxlX2Rlc2Muc3R5bGUucGFkZGluZ0xlZnQgPSAnMTVweCc7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJldHVybiBzcGFuXHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gVGhpcyBmdW5jdGlvbiBsb29rcyB0aHJvdWdoIHRoZSB0YXNrcyBhcnJheSB3aGljaCBoYXMgYWxsIHRhc2tzIGNyZWF0ZWQgYW5kIHBvcHVsYXRlcyBvbmx5IHRoZSBvbmVzIG5lZWRlZFxyXG5cclxuZnVuY3Rpb24gYXBwZW5kVGFza3MoYXJyLCBlKSB7XHJcbiAgICAvLyBJdCBzdGFydHMgYnkgcmVtb3ZpbmcgYWxsIGNvbnRlbnQgb24gdGhlIHBhZ2UgYW5kIHRoZW4gYXBwZW5kaW5nIG9ubHkgdGhlIG5lZWRlZCBjb250ZW50XHJcbiAgICBjb25zdCB0YXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrcycpO1xyXG4gICAgdGFza3MucmVtb3ZlKCk7XHJcbiAgICBjb25zdCB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0LmNsYXNzTGlzdC5hZGQoJ3Rhc2tzJyk7XHJcbiAgICBlbGVtcygpLnRhc2tzX3NlY3Rpb24uYXBwZW5kKHQpO1xyXG5cclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGlmKGlzVG9kYXkocGFyc2VJU08oYXJyW2ldLmR1ZSkpICYmIGUgPT0gJyBUb2RheScpIHtcclxuICAgICAgICAgICAgdC5hcHBlbmQodGFza0NyZWF0aW9uKGFycltpXSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGlzVG9tb3Jyb3cocGFyc2VJU08oYXJyW2ldLmR1ZSkpICYmIGUgPT0gJyBUb21vcnJvdycpIHtcclxuICAgICAgICAgICAgdC5hcHBlbmQodGFza0NyZWF0aW9uKGFycltpXSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGlzVGhpc1dlZWsocGFyc2VJU08oYXJyW2ldLmR1ZSkpICYmIGUgPT0gJyBUaGlzIFdlZWsnKSB7XHJcbiAgICAgICAgICAgIHQuYXBwZW5kKHRhc2tDcmVhdGlvbihhcnJbaV0pKTtcclxuICAgICAgICB9IGVsc2UgaWYoZSA9PSAnIENvbXBsZXRlZCBUYXNrcycpIHtcclxuICAgICAgICAgICAgdC5hcHBlbmQodGFza0NyZWF0aW9uKGFycltpXSkpO1xyXG4gICAgICAgIH0gZWxzZSBpZihlID09ICcgQWxsIFRhc2tzJykge1xyXG4gICAgICAgICAgICB0LmFwcGVuZCh0YXNrQ3JlYXRpb24oYXJyW2ldKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFRoaXMgcG9wdWxhdGVzIHRoZSBwcm9qZWN0IGNyZWF0ZWQgb24gdGhlIHNpZGViYXJcclxuXHJcbmZ1bmN0aW9uIHByb2plY3RDcmVhdGlvbihwcm9qKSB7XHJcbiAgICBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKTtcclxuICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBwLnRleHRDb250ZW50ID0gcHJvajtcclxuICAgIFxyXG4gICAgY29uc3QgdHJhc2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XHJcbiAgICB0cmFzaC5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS10cmFzaC1jYW4nKTtcclxuICAgIHByb2plY3QuYXBwZW5kKHAsIHRyYXNoKTtcclxuXHJcbiAgICBwcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIGUgPT4ge1xyXG4gICAgICAgIHRyYXNoLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICB9KTtcclxuXHJcbiAgICBwcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgZSA9PiB7XHJcbiAgICAgICAgdHJhc2guc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIH0pO1xyXG5cclxuICAgIHRyYXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7ICAvLyAgZGVsZXRpbmcgYSBwcm9qZWN0IGFsb25nIHdpdGggaXRzIHRhc2tzXHJcbiAgICAgICAgZWxlbXMoKS5oMi50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdQcm9qZWN0cyBDcmVhdGVkJywgcHJvamVjdHNDcmVhdGVkKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnVGFza3MgQ3JlYXRlZCcsIHRhc2tzKTtcclxuICAgICAgICBwcm9qZWN0LnJlbW92ZSgpO1xyXG4gICAgICAgIHByb2plY3RzQ3JlYXRlZC5zcGxpY2UocHJvamVjdHNDcmVhdGVkLmluZGV4T2YocC50ZXh0Q29udGVudCksIDEpO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0YXNrcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBmb3IobGV0IHUgaW4gdGFza3NbaV0pIHtcclxuICAgICAgICAgICAgICAgIGlmKHRhc2tzW2ldW3VdID09IHAudGV4dENvbnRlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YXNrcy5zcGxpY2UodGFza3MuaW5kZXhPZih0YXNrc1tpXSksIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhc2tfbmFtZXMuc3BsaWNlKHRhc2tfbmFtZXMuaW5kZXhPZih0YXNrc1tpXS50aXRsZSksIDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdQcm9qZWN0cyBDcmVhdGVkJywgcHJvamVjdHNDcmVhdGVkKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnVGFza3MgQ3JlYXRlZCcsIHRhc2tzKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBwcm9qZWN0XHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gVGhpcyBmdW5jdGlvbiBjcmVhdGVzIGFuIGV2ZW50IGxpc3RlbmVyIGZvciBhbGwgZnV0dXJlIHByb2plY3RzIHRoYXQgd2lsbCBiZSBjcmVhdGVkLiBFdmVyeXRpbWUgd2UgY2xpY2sgb24gYSBwcm9qZWN0LCBvbmx5IHRoYXQgcHJvamVjdCdzIFxyXG4vLyB0YXNrcyB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSBET01cclxuXHJcbmZ1bmN0aW9uIGEoKSB7XHJcbiAgICBjb25zdCB5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QgcCcpO1xyXG4gICAgeS5mb3JFYWNoKChwKSA9PiB7XHJcbiAgICAgICAgcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgICAgICAgICBlbGVtcygpLmgyLnRleHRDb250ZW50ID0gcC5pbm5lclRleHQ7XHJcbiAgICAgICAgICAgIGVsZW1zKCkudG9kYXkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XHJcbiAgICAgICAgICAgIGVsZW1zKCkudG9tb3Jyb3cuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XHJcbiAgICAgICAgICAgIGVsZW1zKCkudGhpc193ZWVrLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xyXG4gICAgICAgICAgICBlbGVtcygpLmNvbXBsZXRlZF90YXNrcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcclxuICAgICAgICAgICAgLy8gZWxlbXMoKS5oMi50ZXh0Q29udGVudCA9IHByb2oudGV4dENvbnRlbnQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHRhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrcycpO1xyXG4gICAgICAgICAgICB0YXMucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld190YXNrc19kaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgbmV3X3Rhc2tzX2Rpdi5jbGFzc0xpc3QuYWRkKCd0YXNrcycpO1xyXG4gICAgICAgICAgICBlbGVtcygpLnRhc2tzX3NlY3Rpb24uYXBwZW5kKG5ld190YXNrc19kaXYpO1xyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGFza3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmKHRhc2tzW2ldLnByb2plY3QgPT0gZS50YXJnZXQudGV4dENvbnRlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YXNrID0gdGFza0NyZWF0aW9uKHRhc2tzW2ldKTtcclxuICAgICAgICAgICAgICAgICAgICBuZXdfdGFza3NfZGl2LmFwcGVuZCh0YXNrKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gVGhpcyBpcyB0aGUgZWRpdCBib3ggdGhhdCB3aWxsIHBvcCB1cCB3aGVuIHdlIHdhbnQgdG8gZWRpdCBhIHRhc2tcclxuXHJcbmZ1bmN0aW9uIGVkaXQodGFzaywgaDMsIHAsIHNwYW4yKSB7XHJcbiAgICBjb25zdCBvdmVybGF5X2VkaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIG92ZXJsYXlfZWRpdC5jbGFzc0xpc3QuYWRkKCdvdmVybGF5LWVkaXQnKTtcclxuXHJcbiAgICBjb25zdCBpbmZvX2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgaW5mb19ib3guY2xhc3NMaXN0LmFkZCgnaW5mby1ib3gnKTtcclxuICAgIG92ZXJsYXlfZWRpdC5hcHBlbmQoaW5mb19ib3gpO1xyXG5cclxuICAgIGNvbnN0IGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGhlYWRpbmcuY2xhc3NMaXN0LmFkZCgnaGVhZGluZycpO1xyXG4gICAgY29uc3QgaDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgaDIudGV4dENvbnRlbnQgPSAnRWRpdCBUYXNrJztcclxuICAgIGhlYWRpbmcuYXBwZW5kKGgyKTtcclxuICAgIGluZm9fYm94LmFwcGVuZChoZWFkaW5nKTtcclxuICAgIGNvbnN0IGhyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaHInKTtcclxuICAgIGluZm9fYm94LmFwcGVuZChocik7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLWZvcm0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xyXG4gICAgZm9ybS5pZCA9ICdmb3JtJztcclxuICAgIGluZm9fYm94LmFwcGVuZChmb3JtKTtcclxuXHJcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGl0bGUuY2xhc3NMaXN0LmFkZCgndGl0bGUnKTtcclxuICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgIGxhYmVsLnRleHRDb250ZW50ID0gJ1RpdGxlOic7XHJcbiAgICBjb25zdCBiciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJyk7XHJcbiAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKCdvdmVybGF5LWlucHV0Jyk7XHJcbiAgICBpbnB1dC50eXBlID0gJ3RleHQnO1xyXG4gICAgaW5wdXQuaWQgPSAndGFzay1pbnB1dC10ZXh0NCc7XHJcbiAgICB0aXRsZS5hcHBlbmQobGFiZWwsIGJyLCBpbnB1dCk7XHJcbiAgICBmb3JtLmFwcGVuZCh0aXRsZSk7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgIGNvbnN0IGR1ZV9kYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkdWVfZGF0ZS5jbGFzc0xpc3QuYWRkKCdkdWUtZGF0ZScpO1xyXG4gICAgY29uc3QgbGFiZWwyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgIGxhYmVsMi50ZXh0Q29udGVudCA9ICdEdWUgRGF0ZTonO1xyXG4gICAgY29uc3QgYnIyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnInKTtcclxuICAgIGNvbnN0IGlucHV0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgICBpbnB1dDIuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheS1pbnB1dCcpO1xyXG4gICAgaW5wdXQyLnR5cGUgPSAnZGF0ZSc7XHJcbiAgICBpbnB1dDIuaWQgPSAndGFzay1pbnB1dC1kYXRlNCc7XHJcbiAgICBkdWVfZGF0ZS5hcHBlbmQobGFiZWwyLCBicjIsIGlucHV0Mik7XHJcbiAgICBmb3JtLmFwcGVuZChkdWVfZGF0ZSk7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGRlc2NyaXB0aW9uLmNsYXNzTGlzdC5hZGQoJ2Rlc2NyaXB0aW9uJyk7XHJcbiAgICBjb25zdCBsYWJlbDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xyXG4gICAgbGFiZWwzLnRleHRDb250ZW50ID0gJ0Rlc2NyaXB0aW9uOic7XHJcbiAgICBjb25zdCBicjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xyXG4gICAgY29uc3QgdGV4dGFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xyXG4gICAgdGV4dGFyZWEuaWQgPSAndGFzay1pbnB1dC10ZXh0YXJlYTQnO1xyXG4gICAgZGVzY3JpcHRpb24uYXBwZW5kKGxhYmVsMywgYnIzLCB0ZXh0YXJlYSk7XHJcbiAgICBmb3JtLmFwcGVuZChkZXNjcmlwdGlvbik7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5Jyk7XHJcbiAgICBjb25zdCBsYWJlbDQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xyXG4gICAgbGFiZWw0LnRleHRDb250ZW50ID0gJ1ByaW9yaXR5Oic7XHJcbiAgICBjb25zdCBicjQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xyXG4gICAgY29uc3Qgc2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XHJcbiAgICBzZWxlY3QuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheS1zZWxlY3QnKTtcclxuICAgIHNlbGVjdC5pZCA9ICd0YXNrLWlucHV0LXByaW9yaXR5NCc7XHJcbiAgICBzZWxlY3QuaW5uZXJIVE1MID0gYDxvcHRpb24gdmFsdWU9XCJMb3dcIiBzZWxlY3RlZD5Mb3c8L29wdGlvbj5cclxuICAgIDxvcHRpb24gdmFsdWU9XCJNZWRpdW1cIiBzZWxlY3RlZD5NZWRpdW08L29wdGlvbj5cclxuICAgIDxvcHRpb24gdmFsdWU9XCJIaWdoXCIgc2VsZWN0ZWQ+SGlnaDwvb3B0aW9uPmA7XHJcbiAgICBwcmlvcml0eS5hcHBlbmQobGFiZWw0LCBicjQsIHNlbGVjdCk7XHJcbiAgICBmb3JtLmFwcGVuZChwcmlvcml0eSk7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdC1wcm9qZWN0Jyk7XHJcblxyXG4gICAgY29uc3QgbGFiZWw1ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgIGxhYmVsNS50ZXh0Q29udGVudCA9ICdQcm9qZWN0Oic7XHJcbiAgICBjb25zdCBicjUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xyXG4gICAgY29uc3Qgc2VsZWN0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xyXG4gICAgc2VsZWN0Mi5jbGFzc0xpc3QuYWRkKCdvdmVybGF5LXNlbGVjdCcpO1xyXG4gICAgc2VsZWN0Mi5pZCA9ICd0YXNrLWlucHV0LXByb2plY3Q0JztcclxuXHJcbiAgICBzZWxlY3QyLmlubmVySFRNTCArPSBgPG9wdGlvbiB2YWx1ZT1cIlwiIHNlbGVjdGVkPk4vQTwvb3B0aW9uPmA7XHJcblxyXG4gICAgLy8gY29uc29sZS5sb2cocHJvamVjdHNDcmVhdGVkKTtcclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBwcm9qZWN0c0NyZWF0ZWQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBzZWxlY3QyLmlubmVySFRNTCArPSBgPG9wdGlvbiB2YWx1ZT1cIiR7cHJvamVjdHNDcmVhdGVkW2ldfVwiPiR7cHJvamVjdHNDcmVhdGVkW2ldfTwvb3B0aW9uPmA7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvamVjdC5hcHBlbmQobGFiZWw1LCBicjUsIHNlbGVjdDIpO1xyXG4gICAgZm9ybS5hcHBlbmQocHJvamVjdCk7XHJcbiAgICBcclxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgYnV0dG9ucy5jbGFzc0xpc3QuYWRkKCdidXR0b25zJyk7XHJcbiAgICBjb25zdCBidG4xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBidG4xLmlkID0gJ2Nsb3NlLWVkaXQtZm9ybSc7XHJcbiAgICBidG4xLmNsYXNzTGlzdC5hZGQoJ2Nsb3NlJyk7XHJcbiAgICBidG4xLnRleHRDb250ZW50ID0gJ0Nsb3NlJztcclxuICAgIGNvbnN0IGJ0bjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgIGJ0bjIuaWQgPSAnZmluaXNoLWVkaXQnO1xyXG4gICAgYnRuMi5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzaycpO1xyXG4gICAgYnRuMi50ZXh0Q29udGVudCA9ICdGaW5pc2ggRWRpdCc7XHJcbiAgICBidXR0b25zLmFwcGVuZChidG4xLCBidG4yKTtcclxuICAgIGluZm9fYm94LmFwcGVuZChidXR0b25zKTtcclxuXHJcblxyXG4gICAgYnRuMS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyAgQ2xvc2UgYnV0dG9uXHJcbiAgICAgICAgb3ZlcmxheV9lZGl0LnJlbW92ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYnRuMi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyBGaW5pc2ggRWRpdCBidXR0b25cclxuICAgICAgICB0YXNrLnRpdGxlID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgdGFzay5kZXNjID0gdGV4dGFyZWEudmFsdWU7XHJcbiAgICAgICAgdGFzay5kdWUgPSBpbnB1dDIudmFsdWU7XHJcbiAgICAgICAgdGFzay5wcm9qZWN0ID0gc2VsZWN0Mi52YWx1ZTtcclxuICAgICAgICB0YXNrLnByaW9yaXR5ID0gc2VsZWN0LnZhbHVlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGgzLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcclxuICAgICAgICBwLnRleHRDb250ZW50ID0gdGFzay5kZXNjO1xyXG4gICAgICAgIHNwYW4yLnRleHRDb250ZW50ID0gdGFzay5kdWU7XHJcblxyXG4gICAgICAgIGFwcGVuZFRhc2tzKHRhc2tzLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza3Mtc2VjdGlvbi1oMicpLnRleHRDb250ZW50KTtcclxuICAgICAgICBvdmVybGF5X2VkaXQucmVtb3ZlKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2codGFza3MpO1xyXG5cclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGFza3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYodGFza3NbaV0ucHJvamVjdCA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza3Mtc2VjdGlvbi1oMicpLnRleHRDb250ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza3MnKS5hcHBlbmQodGFza0NyZWF0aW9uKHRhc2tzW2ldKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBpbnB1dC52YWx1ZSA9IHRhc2sudGl0bGU7XHJcbiAgICBpbnB1dDIudmFsdWUgPSB0YXNrLmR1ZTtcclxuICAgIHRleHRhcmVhLnZhbHVlID0gdGFzay5kZXNjO1xyXG4gICAgc2VsZWN0LnZhbHVlID0gdGFzay5wcmlvcml0eTtcclxuICAgIHNlbGVjdDIudmFsdWUgPSB0YXNrLnByb2plY3Q7XHJcbiAgICBcclxuICAgIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBvdmVybGF5X2VkaXQsXHJcbiAgICAgICAgaW5wdXQsXHJcbiAgICAgICAgaW5wdXQyLFxyXG4gICAgICAgIHRleHRhcmVhLFxyXG4gICAgICAgIHNlbGVjdCxcclxuICAgICAgICBzZWxlY3QyLFxyXG4gICAgICAgIGJ0bjEsXHJcbiAgICAgICAgYnRuMlxyXG4gICAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFRoaXMgaXMgdGhlIGJveCB0aGF0IHdpbGwgcG9wIHVwIHdoZW4gd2UgY2xpY2sgb24gdGhlIHRpdGxlIG9mIGEgdGFzaywgaXQgYWxzbyBoYXMgYW4gZWRpdCB0YXNrIG9wdGlvbiBpbiBpdFxyXG5cclxuZnVuY3Rpb24gdmlldyh0YXNrLCBoMywgcCwgc3BhbjIsIGYpIHtcclxuICAgIGNvbnN0IG92ZXJsYXkzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBvdmVybGF5My5jbGFzc0xpc3QuYWRkKCdvdmVybGF5MycpO1xyXG5cclxuICAgIGNvbnN0IGluZm9fYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBpbmZvX2JveC5jbGFzc0xpc3QuYWRkKCdpbmZvLWJveCcpO1xyXG4gICAgb3ZlcmxheTMuYXBwZW5kKGluZm9fYm94KTtcclxuXHJcbiAgICBjb25zdCBoZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBoZWFkaW5nLmNsYXNzTGlzdC5hZGQoJ2hlYWRpbmcnKTtcclxuICAgIGhlYWRpbmcuc3R5bGUudGV4dEFsaWduID0gJ2NlbnRlcic7XHJcbiAgICBjb25zdCBoMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XHJcbiAgICBoMi5jbGFzc0xpc3QuYWRkKCdvdmVybGF5My10aXRsZScpO1xyXG4gICAgaDIudGV4dENvbnRlbnQgPSB0YXNrLnRpdGxlO1xyXG4gICAgaGVhZGluZy5hcHBlbmQoaDIpO1xyXG4gICAgaW5mb19ib3guYXBwZW5kKGhlYWRpbmcpO1xyXG4gICAgY29uc3QgaHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdocicpO1xyXG4gICAgaW5mb19ib3guYXBwZW5kKGhyKTtcclxuXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tVGFzayBJbmZvLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgY29uc3QgdGFza19pbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0YXNrX2luZm8uY2xhc3NMaXN0LmFkZCgndGFzay1pbmZvJyk7XHJcbiAgICBpbmZvX2JveC5hcHBlbmQodGFza19pbmZvKTtcclxuXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgY29uc3QgZHVlX2RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGR1ZV9kYXRlLmNsYXNzTGlzdC5hZGQoJ2R1ZS1kYXRlJyk7XHJcbiAgICBkdWVfZGF0ZS5zdHlsZS5wYWRkaW5nQm90dG9tID0gJzEwcHgnOyBcclxuICAgIGNvbnN0IGgzXzEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gICAgaDNfMS5jbGFzc0xpc3QuYWRkKCdoM0ZvclRhc2tJbmZvJyk7XHJcbiAgICBoM18xLnRleHRDb250ZW50ID0gJ0R1ZSBEYXRlOic7XHJcbiAgICBjb25zdCBwXzEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBwXzEuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheTMtZGF0ZScpO1xyXG4gICAgcF8xLnRleHRDb250ZW50ID0gdGFzay5kdWU7XHJcbiAgICBkdWVfZGF0ZS5hcHBlbmQoaDNfMSwgcF8xKTtcclxuICAgIHRhc2tfaW5mby5hcHBlbmQoZHVlX2RhdGUpO1xyXG5cclxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdkZXNjcmlwdGlvbicpO1xyXG4gICAgY29uc3QgaDNfMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XHJcbiAgICBoM18yLmNsYXNzTGlzdC5hZGQoJ2gzRm9yVGFza0luZm8nKTtcclxuICAgIGgzXzIudGV4dENvbnRlbnQgPSAnRGVzY3JpcHRpb246JztcclxuICAgIGNvbnN0IHAyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgcDIuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheTMtZGVzYycpO1xyXG4gICAgcDIudGV4dENvbnRlbnQgPSB0YXNrLmRlc2M7XHJcbiAgICBkZXNjcmlwdGlvbi5hcHBlbmQoaDNfMiwgcDIpO1xyXG4gICAgdGFza19pbmZvLmFwcGVuZChkZXNjcmlwdGlvbik7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5Jyk7XHJcbiAgICBwcmlvcml0eS5zdHlsZS5wYWRkaW5nQm90dG9tID0gJzEwcHgnOyBcclxuICAgIGNvbnN0IGgzXzMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gICAgaDNfMy5jbGFzc0xpc3QuYWRkKCdoM0ZvclRhc2tJbmZvJyk7XHJcbiAgICBoM18zLnRleHRDb250ZW50ID0gJ1ByaW9yaXR5Oic7XHJcbiAgICBjb25zdCBwMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIHAzLmNsYXNzTGlzdC5hZGQoJ292ZXJsYXkzLXByaW9yaXR5Jyk7XHJcbiAgICBwMy50ZXh0Q29udGVudCA9IHRhc2sucHJpb3JpdHk7XHJcbiAgICBwcmlvcml0eS5hcHBlbmQoaDNfMywgcDMpO1xyXG4gICAgdGFza19pbmZvLmFwcGVuZChwcmlvcml0eSk7XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICBjb25zdCBzZWxlY3RfcHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgc2VsZWN0X3Byb2plY3QuY2xhc3NMaXN0LmFkZCgnc2VsZWN0LXByb2plY3QnKTtcclxuICAgIGNvbnN0IGgzXzQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gICAgaDNfNC5jbGFzc0xpc3QuYWRkKCdoM0ZvclRhc2tJbmZvJyk7XHJcbiAgICBoM180LnRleHRDb250ZW50ID0gJ1Byb2plY3Q6JztcclxuICAgIGNvbnN0IHA0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgcDQuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheTMtcHJvamVjdCcpO1xyXG4gICAgY29uc29sZS5sb2codGFzay5wcm9qZWN0KTtcclxuICAgIGlmKHRhc2sucHJvamVjdCA9PSAnJykgcDQudGV4dENvbnRlbnQgPSAnTi9BJztcclxuICAgIGVsc2UgcDQudGV4dENvbnRlbnQgPSB0YXNrLnByb2plY3Q7XHJcbiAgICBzZWxlY3RfcHJvamVjdC5hcHBlbmQoaDNfNCwgcDQpO1xyXG4gICAgdGFza19pbmZvLmFwcGVuZChzZWxlY3RfcHJvamVjdCk7XHJcblxyXG4gICAgXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGJ1dHRvbnMuY2xhc3NMaXN0LmFkZCgnYnV0dG9ucycpO1xyXG4gICAgY29uc3QgYnRuMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgYnRuMS5pZCA9ICdjbG9zZS1lZGl0LXRhc2stZm9ybSc7XHJcbiAgICBidG4xLmNsYXNzTGlzdC5hZGQoJ2Nsb3NlJyk7XHJcbiAgICBidG4xLnRleHRDb250ZW50ID0gJ0Nsb3NlJztcclxuICAgIGNvbnN0IGJ0bjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgIGJ0bjIuY2xhc3NMaXN0LmFkZCgnZWRpdC1idG4nKTtcclxuICAgIGJ0bjIudGV4dENvbnRlbnQgPSAnRWRpdCBUYXNrJztcclxuICAgIGJ0bjIuc3R5bGUuZGlzcGxheSA9IGY7XHJcbiAgICBidXR0b25zLmFwcGVuZChidG4xLCBidG4yKTtcclxuICAgIGluZm9fYm94LmFwcGVuZChidXR0b25zKTtcclxuXHJcblxyXG4gICAgYnRuMS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgICAgIG92ZXJsYXkzLnJlbW92ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYnRuMi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgICAgIG92ZXJsYXkzLnJlbW92ZSgpO1xyXG4gICAgICAgIGVsZW1zKCkuY29udGVudC5hcHBlbmQoZWRpdCh0YXNrLCBoMywgcCwgc3BhbjIpLm92ZXJsYXlfZWRpdCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBvdmVybGF5MyxcclxuICAgICAgICBidG4xLFxyXG4gICAgICAgIGJ0bjJcclxuICAgIH1cclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBUaGlzIGZ1bmN0aW9uIG1ha2VzIGl0IHNvIHRoYXQgaXQncyBlYXNpZXIgdG8gc2VlIHdoaWNoIHNlY3Rpb24gd2UncmUgb24uIFxyXG5cclxuZnVuY3Rpb24gZChlLCBmaXJzdCwgc2Vjb25kLCB0aGlyZCwgZm91cnRoKSB7XHJcbiAgICBlbGVtcygpLmgyLnRleHRDb250ZW50ID0gZS50ZXh0Q29udGVudDtcclxuICAgIGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3doaXRlJztcclxuICAgIGZpcnN0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xyXG4gICAgc2Vjb25kLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xyXG4gICAgdGhpcmQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XHJcbiAgICBmb3VydGguc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XHJcbn1cclxuIiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBpc0JlZm9yZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBJcyB0aGUgZmlyc3QgZGF0ZSBiZWZvcmUgdGhlIHNlY29uZCBvbmU/XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBJcyB0aGUgZmlyc3QgZGF0ZSBiZWZvcmUgdGhlIHNlY29uZCBvbmU/XG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBkYXRlIHRoYXQgc2hvdWxkIGJlIGJlZm9yZSB0aGUgb3RoZXIgb25lIHRvIHJldHVybiB0cnVlXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlVG9Db21wYXJlIC0gdGhlIGRhdGUgdG8gY29tcGFyZSB3aXRoXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gdGhlIGZpcnN0IGRhdGUgaXMgYmVmb3JlIHRoZSBzZWNvbmQgZGF0ZVxuICogQHRocm93cyB7VHlwZUVycm9yfSAyIGFyZ3VtZW50cyByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJcyAxMCBKdWx5IDE5ODkgYmVmb3JlIDExIEZlYnJ1YXJ5IDE5ODc/XG4gKiBjb25zdCByZXN1bHQgPSBpc0JlZm9yZShuZXcgRGF0ZSgxOTg5LCA2LCAxMCksIG5ldyBEYXRlKDE5ODcsIDEsIDExKSlcbiAqIC8vPT4gZmFsc2VcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0JlZm9yZShkaXJ0eURhdGUsIGRpcnR5RGF0ZVRvQ29tcGFyZSkge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgdmFyIGRhdGVUb0NvbXBhcmUgPSB0b0RhdGUoZGlydHlEYXRlVG9Db21wYXJlKTtcbiAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpIDwgZGF0ZVRvQ29tcGFyZS5nZXRUaW1lKCk7XG59Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsInJlcXVpcmVkQXJncyIsInJlcXVpcmVkIiwiYXJncyIsIlR5cGVFcnJvciIsIl90eXBlb2YiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwidG9EYXRlIiwiYXJndW1lbnQiLCJhcmd1bWVudHMiLCJhcmdTdHIiLCJEYXRlIiwiZ2V0VGltZSIsImNvbnNvbGUiLCJ3YXJuIiwic3RhY2siLCJOYU4iLCJzdGFydE9mRGF5IiwiZGlydHlEYXRlIiwiZGF0ZSIsInNldEhvdXJzIiwiaXNTYW1lRGF5IiwiZGlydHlEYXRlTGVmdCIsImRpcnR5RGF0ZVJpZ2h0IiwiZGF0ZUxlZnRTdGFydE9mRGF5IiwiZGF0ZVJpZ2h0U3RhcnRPZkRheSIsImlzVG9kYXkiLCJub3ciLCJNYXRoIiwicG93IiwibWlsbGlzZWNvbmRzSW5Ib3VyIiwidG9JbnRlZ2VyIiwiZGlydHlOdW1iZXIiLCJudW1iZXIiLCJOdW1iZXIiLCJpc05hTiIsImNlaWwiLCJmbG9vciIsInBhcnNlSVNPIiwiX29wdGlvbnMkYWRkaXRpb25hbERpIiwiYWRkaXRpb25hbERpZ2l0cyIsIlJhbmdlRXJyb3IiLCJkYXRlU3RyaW5ncyIsInNwbGl0RGF0ZVN0cmluZyIsInBhcnNlWWVhclJlc3VsdCIsInBhcnNlWWVhciIsInBhcnNlRGF0ZSIsInJlc3REYXRlU3RyaW5nIiwieWVhciIsIm9mZnNldCIsInRpbWVzdGFtcCIsInRpbWUiLCJwYXJzZVRpbWUiLCJ0aW1lem9uZSIsInNldEZ1bGxZZWFyIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VVRDTWlsbGlzZWNvbmRzIiwicGFyc2VUaW1lem9uZSIsInBhdHRlcm5zIiwiZGF0ZVRpbWVEZWxpbWl0ZXIiLCJ0aW1lWm9uZURlbGltaXRlciIsImRhdGVSZWdleCIsInRpbWVSZWdleCIsInRpbWV6b25lUmVnZXgiLCJkYXRlU3RyaW5nIiwidGltZVN0cmluZyIsImFycmF5Iiwic3BsaXQiLCJ0ZXN0Iiwic3Vic3RyIiwidG9rZW4iLCJleGVjIiwicmVwbGFjZSIsInJlZ2V4IiwiUmVnRXhwIiwiY2FwdHVyZXMiLCJtYXRjaCIsInBhcnNlSW50IiwiY2VudHVyeSIsInNsaWNlIiwiaXNXZWVrRGF0ZSIsImRheU9mWWVhciIsInBhcnNlRGF0ZVVuaXQiLCJtb250aCIsImRheSIsIndlZWsiLCJkYXlPZldlZWsiLCJfeWVhciIsInZhbGlkYXRlV2Vla0RhdGUiLCJpc29XZWVrWWVhciIsInNldFVUQ0Z1bGxZZWFyIiwiZGlmZiIsImdldFVUQ0RheSIsInNldFVUQ0RhdGUiLCJkYXlPZklTT1dlZWtZZWFyIiwiZGF5c0luTW9udGhzIiwiaXNMZWFwWWVhckluZGV4IiwidmFsaWRhdGVEYXRlIiwidmFsaWRhdGVEYXlPZlllYXJEYXRlIiwibWF4IiwidmFsdWUiLCJob3VycyIsInBhcnNlVGltZVVuaXQiLCJtaW51dGVzIiwic2Vjb25kcyIsInZhbGlkYXRlVGltZSIsInBhcnNlRmxvYXQiLCJ0aW1lem9uZVN0cmluZyIsInNpZ24iLCJfaG91cnMiLCJ2YWxpZGF0ZVRpbWV6b25lIiwiYWRkRGF5cyIsImRpcnR5QW1vdW50IiwiYW1vdW50Iiwic2V0RGF0ZSIsImdldERhdGUiLCJpc1RvbW9ycm93IiwiZGVmYXVsdE9wdGlvbnMiLCJnZXREZWZhdWx0T3B0aW9ucyIsInN0YXJ0T2ZXZWVrIiwiX3JlZiIsIl9yZWYyIiwiX3JlZjMiLCJfb3B0aW9ucyR3ZWVrU3RhcnRzT24iLCJfb3B0aW9ucyRsb2NhbGUiLCJfb3B0aW9ucyRsb2NhbGUkb3B0aW8iLCJfZGVmYXVsdE9wdGlvbnMkbG9jYWwiLCJfZGVmYXVsdE9wdGlvbnMkbG9jYWwyIiwid2Vla1N0YXJ0c09uIiwibG9jYWxlIiwiZ2V0RGF5IiwiaXNTYW1lV2VlayIsImRhdGVMZWZ0U3RhcnRPZldlZWsiLCJkYXRlUmlnaHRTdGFydE9mV2VlayIsImlzVGhpc1dlZWsiLCJoZWlnaHQiLCJib2R5Iiwic2Nyb2xsSGVpZ2h0IiwiZWxlbXMiLCJvdmVybGF5Iiwib3ZlcmxheTIiLCJhZGRfdGFzayIsImNsb3NlX3Rhc2siLCJjbG9zZV9wcm9qZWN0IiwicGx1cyIsInRvZGF5IiwidG9tb3Jyb3ciLCJ0aGlzX3dlZWsiLCJjb21wbGV0ZWRfdGFza3MiLCJzdWJtaXRfcHJvamVjdCIsImFkZF9wcm9qZWN0X2J0biIsInRhc2tfaW5wdXRfdGV4dCIsInRhc2tfaW5wdXRfZGF0ZSIsInRhc2tfaW5wdXRfdGV4dGFyZWEiLCJ0YXNrX2lucHV0X3ByaW9yaXR5IiwidGFza19pbnB1dF9wcm9qZWN0IiwicHJvamVjdF9pbnB1dF90ZXh0IiwiaDIiLCJ0YXNrc19zZWN0aW9uIiwicHJvamVjdHMiLCJhbGxfdGFza3MiLCJ0b2RheXNfZGF0ZSIsInRhc2tzIiwiY29tcGxldGVkIiwicHJvamVjdHNDcmVhdGVkIiwidGFza19uYW1lcyIsIlRhc2siLCJ0aXRsZSIsImR1ZV9kYXRlIiwiZGVzYyIsInByaW9yaXR5IiwicHJvamVjdCIsImR1ZSIsInRhc2tDcmVhdGlvbiIsInRhc2siLCJzcGFuIiwiY2xhc3NMaXN0IiwiYWRkIiwiYm9yZGVyTGVmdCIsImluZm8iLCJyYWRpbyIsImlucHV0IiwidHlwZSIsImFwcGVuZCIsInRpdGxlX2Rlc2MiLCJoMyIsInRleHRDb250ZW50IiwicCIsImljb25zIiwic3BhbjIiLCJwZW5jaWwiLCJ0cmFzaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZXRUaW1lb3V0IiwiaW5kZXhPZiIsImluY2x1ZGVzIiwidmlldyIsIm92ZXJsYXkzIiwiZWRpdCIsIm92ZXJsYXlfZWRpdCIsImRpc3BsYXkiLCJwYWRkaW5nTGVmdCIsImFwcGVuZFRhc2tzIiwiYXJyIiwidCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiaW5uZXJUZXh0IiwiYmFja2dyb3VuZENvbG9yIiwibmV3X3Rhc2tzX2RpdiIsImluZm9fYm94IiwiaGVhZGluZyIsImhyIiwiZm9ybSIsImxhYmVsIiwiYnIiLCJsYWJlbDIiLCJicjIiLCJpbnB1dDIiLCJkZXNjcmlwdGlvbiIsImxhYmVsMyIsImJyMyIsInRleHRhcmVhIiwibGFiZWw0IiwiYnI0Iiwic2VsZWN0IiwiaW5uZXJIVE1MIiwibGFiZWw1IiwiYnI1Iiwic2VsZWN0MiIsImJ1dHRvbnMiLCJidG4xIiwiYnRuMiIsImxvZyIsImYiLCJ0ZXh0QWxpZ24iLCJ0YXNrX2luZm8iLCJwYWRkaW5nQm90dG9tIiwiaDNfMSIsInBfMSIsImgzXzIiLCJwMiIsImgzXzMiLCJwMyIsInNlbGVjdF9wcm9qZWN0IiwiaDNfNCIsInA0IiwiZmlyc3QiLCJzZWNvbmQiLCJ0aGlyZCIsImZvdXJ0aCIsImFsZXJ0IiwiZGlydHlEYXRlVG9Db21wYXJlIiwiZGF0ZVRvQ29tcGFyZSIsIm5ld190YXNrIiwiY2xpY2siLCJwcm9qIiwidSIsInByb2plY3RDcmVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=